{"version":3,"sources":["theme/index.js","theme/pages/overview.jsx","reducers/DataReducer.js","rootreducer.js","Store.js","client/environment.js","client/index.jsx","components/Input.js","components/server.jsx","components/nav.js","components/spectrum/auxi.js","components/spectrum/interactiveObject.js","components/spectrum/plant.js","components/spectrum/light.js","components/spectrum/mirror.js","components/spectrum/index.js","components/game.js","services/Buildertheme.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["OverviewPage","useSelector","state","data","theme","themes","Container","Wrapped","Theme","this","colors","primary","secondary","tertiary","text","defaultWrapWidth","font","sizes","normal","title","subtitle","medias","em","xs","sm","md","lg","px","query","onlySmall","largerthansm","mdandup","smallerthanmd","padding","styled","pre","values","post","children","EmptyDiv","content","defaultWrap","responsive","EmptySpan","defaultFont","div","Title","props","border","span","ACTIONS","Object","freeze","SET_CLIENT","Symbol","SET_NAV_OPEN","SET_THEME","SET_THEMES","SET_NEWS","SET_EVENTS","SET_FAQS","initialState","client","navopen","window","innerWidth","news","events","faqs","rootReducer","combineReducers","action","type","middleware","applyMiddleware","thunkMiddleware","Store","createStore","envi","dev","location","hostname","status","document","printstatus","console","log","prevFetched","dispatch","environment","_","settings","sc","sanityClient","projectId","dataset","token","ignoreBrowserTokenWarning","useCdn","fetch","Promise","resolve","reject","then","catch","builder","imageUrlBuilder","DATA_ACTIONS","squareImage","url","width","image","height","Input","label","setValue","useState","name","setName","onSubmit","evt","preventDefault","value","onChange","e","target","Server","socket","author","setAuthor","device","setDevice","sensor","setSensor","undefined","returnData","setReturnData","io","transports","on","results","map","r","JSON","stringify","align","SubTitle","Text","style","fontSize","href","background","color","paddingLeft","onClick","rv","emit","Nav","center","to","src","Logo","getPointOnCircle","p5","centrum","offset","division","section","angle","Math","PI","pos","createVector","cos","sin","mult","add","sqr","x","dist2","v","w","y","distToSegment","p","sqrt","l2","t","max","min","distToSegmentSquared","IO_STATE","UNSELECTED","CLICKED","HOVERING","DRAGGED","InteractiveObject","size","loc","dist","isOver","mouseX","mouseY","isCurrentOver","id","mouseMoved","Plant","alternativeColor","collisionColor","colorplaceholder","lights","col","light","j","beam","segments","length","segment","line_v","p1_x","p1_y","line_w","p2_x","p2_y","point","noStroke","fill","millis","circle","Handle","Segment","mirror","creatorMirror","Beam","origin","direction","mirrors","intersectPoints","startPoint","set","reflectionData","reflect","push","reflectionStart","cast","beamStart","beamEnd","intersectionPoints","i","mirrorStart","getPoints","mirrorEnd","u","distance","intersectionPoint","sort","a","b","newDirection","noFill","stroke","line","Light","controlOffset","strokeWeight","handle","getDirection","random","handleOffset","moveHandle","draw","sub","normalize","mouseV","diff","setDirection","mousePressed","mouseReleased","mouseDragged","Mirror","rotation","l11_x","l11_y","l12_x","l12_y","l21_x","l21_y","l22_x","l22_y","denominator","numerator2","result","inter","rectLine","disCon","findLineIntersection","theta1","atan2","theta2","abs","addSegment","revert","Map","plants","toDraw","toInteract","lightSettings","plantSettings","amount","mirrorSettings","getCenter","getRandomPoint","setup","canvasParentRef","createCanvas","parent","forEach","get","gameWorld","td","mr","detectCollision","ti","Game","gameSettings","setGameSettings","useEffect","BuilderTheme","Home","newsref","useRef","getEvents","description","available","moment","key","format","blocks","ref","images","alt","filter","today","Date","yesterday","setDate","getDate","DataHelper","useDispatch","cli","sanityclient","App","history","createBrowserHistory","store","exact","path","component","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.bb3ad12c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport \"./theme.css\"\nimport Overview from './pages/overview'\nexport {Grid, Col, Row } from 'react-styled-flexboxgrid';\n/* \n    - TOAST\n    - support multiple themes\n    - set basic html (background etc)\n    - build in version control\n    - Text\n    - Title\n    - Subtitle\n    - Container\n    - CollapsibleContainer\n    - Button\n*/\n\nexport const OverviewPage = Overview;\n\nlet settings = {\n    \n};\n\nclass Theme {\n    constructor() {\n        this.colors = {\n          primary: \"black\",\n          secondary: \"white\",\n          tertiary: \"red\"\n        };\n\n        this.colors.text = {\n            primary: this.colors.secondary,\n            secondary: this.colors.primary\n        }\n\n        this.defaultWrapWidth = 3;\n\n        this.font = \"American Typewriter\"\n\n        this.sizes = {\n            normal: \"1.2em\",\n            title: \"2em\",\n            subtitle: \"1.4em\"\n        }\n\n        this.medias = {\n          em: {\n            xs: 0,  \n            sm: 48, \n            md: 64, \n            lg: 75\n          }, \n          px: {\n            xs: 0,  \n            sm: 768, \n            md: 1024, \n            lg: 5625\n          }\n        }\n\n        this.medias.query = {\n            onlySmall : `(max-width: ${this.medias.px.sm}px)`,\n            largerthansm : `(min-width: ${this.medias.px.sm+1}px)`,\n            mdandup : `(min-width: ${this.medias.px.md}px)`,\n            smallerthanmd : `(max-width: ${this.medias.px.md-1}px)`\n        }\n\n        this.padding = {\n            xs: 10,  \n            sm: 15, \n            md: 20, \n            lg: 30\n        };\n    }\n    \n    /**\n     * HELPERS\n     */\n    get defaultWrap(){\n        return `solid ${this.colors.primary} ${this.defaultWrapWidth}px`\n    }\n\n    get defaultFont(){\n        return `font-family : ${this.font}; font-size: ${this.sizes.normal};`\n    }\n\n    get styled(){\n        return styled;\n    }\n\n    responsive(pre, values, post){\n        return `\n            ${pre}: ${values.xs}${post};\n\n            @media only screen and (min-width: ${this.medias.px.sm}px) {\n                ${pre}: ${values.sm}${post};\n            }\n\n            @media only screen and (min-width: ${this.medias.px.md}px) {\n                ${pre}: ${values.md}${post};\n            }        \n\n            @media only screen and (min-width: ${this.medias.px.lg}px) {\n                ${pre}: ${values.lg}${post};\n            }        \n        `\n    }\n    \n    /**\n     * COMPONENTS\n     */\n    /**\n     * wrapping\n     */\n    get Wrapped(){\n        return ({children})=><EmptyDiv content={`border : ${this.defaultWrap}; background: white;`}>{children}</EmptyDiv>\n    }\n\n    get Container(){\n        return ({children})=><EmptyDiv content={this.responsive(\"padding\", this.padding, 'px')}>{children}</EmptyDiv>\n    }\n\n    get Text(){\n        return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n    }\n\n    // get Container(){\n    //     return styled.div`\n    //         padding: ${this.padding}\n    //     `\n    // }\n\n    // /**\n    //  * typography\n    //  */\n    // get Text(){\n    //     return styled.p`\n    //         ${this.defaultFont}\n    //     `\n    // }\n\n    get Title(){\n        return styled.div`\n            ${this.defaultFont}\n            font-size: ${this.sizes.title}; \n        `\n    }\n\n    get SubTitle(){\n        return styled(this.Title)`\n            font-size: ${this.sizes.subtitle}; \n        `\n    }\n\n    // /**\n    //  * grid\n    //  */\n    // get Grid(){\n    //     return styled(Grid_)`\n    //         margin: 0px;\n    //         padding: 0px;\n    //         width: 100%;\n    //     `\n    // }\n\n    // get Row(){return Row_};\n    // get Col(){return Col_};\n}\n\nconst Wrapped = styled.div`\n    border: ${props=>props.border}\n`\n\nconst EmptyDiv = styled.div`\n    ${props=>props.content}\n    \n`\n\nconst EmptySpan = styled.span`\n    ${props=>props.content}\n`\n\n\nexport default Theme;","import React from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Theme from '..';\n\nexport default ()=>{\n    const [theme, themes] = useSelector(state => [state.data.theme, state.data.themes]);\n\n\n    if (!theme){\n        return \"loading\"\n    } else {\n        return <theme.Container>\n                    <theme.Wrapped>\n                        <theme.Container>\n                            allo\n                        </theme.Container>\n                    </theme.Wrapped>\n            </theme.Container> \n    }\n}","export const ACTIONS = Object.freeze({\n    SET_CLIENT: Symbol(\"data/client\"),\n    SET_NAV_OPEN: Symbol('data/navopen'),\n    SET_THEME: Symbol('data/theme'),\n    SET_THEMES: Symbol('data/themes'),\n    SET_NEWS: Symbol('data/news'),\n    SET_EVENTS: Symbol('data/cal'),\n    SET_FAQS: Symbol('data/faq')\n});\n\nconst initialState = {\n  client: null,\n  navopen: window.innerWidth > 768,\n  theme: null,\n  themes: null,\n  news: null,\n  events: null,\n  faqs: null\n};\n\nexport default (state = initialState, action) => {\n  \n  switch (action.type) {\n    case ACTIONS.SET_CLIENT: {\n      return {\n        ...state,\n        client: action.client\n      };\n    }\n    case ACTIONS.SET_FAQS: {\n      return {\n        ...state,\n        faqs: action.faqs\n      };\n    }\n    case ACTIONS.SET_NEWS: {\n      return {\n        ...state,\n        news: action.news\n      };\n    }\n    case ACTIONS.SET_EVENTS: {\n      return {\n        ...state,\n        events: action.events\n      };\n    }\n    case ACTIONS.SET_NAV_OPEN: {\n      return {\n        ...state,\n        navopen: action.navopen\n      };\n    }\n    case ACTIONS.SET_THEME: {\n      return {\n        ...state,\n        theme: action.theme\n      };\n    }\n    case ACTIONS.SET_THEMES: {\n      return {\n        ...state,\n        themes: action.themes\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  } \n};\n","import { combineReducers } from \"redux\";\nimport data from './reducers/DataReducer';\n\nconst rootReducer = combineReducers({\n  data\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./rootreducer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\n\nconst Store = createStore(rootReducer, middleware);\n\nexport default Store;\n","export const envi = ()=>{\n    const dev = (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\");\n    const status = (()=>{return `Running ${dev?'local':'server'}`})()\n    const printstatus = ()=>{\n        console.log(status);\n    }\n\n    if (dev){\n        document.title = \" (local) \" + document.title;\n    }\n    \n    return {\n        dev,\n        status,\n        printstatus\n    }   \n}\n\nexport default envi","import sanityClient from '@sanity/client'\nimport envi from './environment'\nimport {settings} from './connector_settings.json'\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n// import toast from '../services/toast'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst prevFetched = {};\n\nexport const client = (dispatch)=>{\n    const environment = envi();\n    let _ = settings;\n    let news = [];\n    const sc = sanityClient({\n        projectId: _.projectId,\n        dataset: _.dataset,\n        token: _.token, // or leave blank to be anonymous user\n        ignoreBrowserTokenWarning: true,\n        useCdn: false\n    })\n\n    const fetch = (query)=>{\n        return new Promise((resolve, reject)=>{\n            if (prevFetched[query]){\n                if (environment.dev){\n                    console.log(\"reused cached query\");\n                }\n                resolve(prevFetched[query]);\n            } else {\n                sc.fetch(query)\n                .then((data)=>{\n                    prevFetched[query] = data;\n                    resolve(data);\n                }).catch(reject);\n            }\n        })\n    }\n\n    const builder = imageUrlBuilder(sc)\n\n    const squareImage = (url, width)=>{\n        return builder.image(url).width(width).height(width).url();\n    }\n\n    \n    if (environment.dev){\n        environment.printstatus()\n    } \n    // title, description, \n    fetch(\"*[_type == 'biomoddnews']{title, description, images[]{title, description, 'image':image.asset->url}} | order(_createdAt desc)\").then((news)=>{\n        dispatch({ type: DATA_ACTIONS.SET_NEWS, news});\n    })\n\n    fetch(\"*[_type == 'biomoddevent']{description, title, moment, available}|order(moment asc)\").then((events)=>{\n        dispatch({type: DATA_ACTIONS.SET_EVENTS, events});\n    })\n\n    fetch(\"*[_type == 'faq']{title, description}\").then((faqs)=>{\n        dispatch({type: DATA_ACTIONS.SET_FAQS, faqs})\n    })\n\n    return {\n        fetch,\n        environment,\n        squareImage\n    }\n}\n\n\n\nexport default client;\n\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\n\n// const Input = ({label, value, setValue})=>{\n//     const theme = useSelector(state => state.data.theme);\n//     const [name, setName] = useState(\"\");\n    \n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         alert(`Submitting Name ${name}`)\n//     }\n\n//     if (!theme){\n//         return null;\n//     } else {\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//             <theme.Text>\n//                 {label}&nbsp;&nbsp;\n//           </theme.Text>\n//           <input\n//             type=\"text\"\n//             value={value}\n//             onChange={e => setValue(e.target.value)}\n//           />\n//         </label>\n//       </form>\n//     );\n//     }\n// }\n\nexport function Input({label, setValue}) {\n    const [name, setName] = useState(\"\");\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setValue(name);\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n            <code>\n                {label}&nbsp;\n          </code>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        &nbsp;\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\nexport default Input;","import React, {useState} from 'react';\nimport { io } from \"socket.io-client\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport Input from './Input';\nimport { useSelector } from \"react-redux\";\n\n\nconst Server = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const [author, setAuthor] = useState(\"\");\n    const [device, setDevice] = useState('');\n    const [sensor, setSensor] = useState('');\n    const [returnData, setReturnData] = useState(undefined);\n    let socket;\n\n    console.log(window.location.hostname)\n\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n\n    socket.on(\"/push\", (results)=>{\n  \n        console.log(results)\n\n        setReturnData(results.map(r=><>\n            {JSON.stringify(r)} <br/>\n        </>))\n    } )\n\n    if (!theme){\n        return null;\n    }\n\n    return <Row align=\"center\">\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    Store and retrieve data (RESTFul API)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                    /push?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device, sensor, value\n                  <br/>\n                  Example: \n                  <br/>\n                  <i>/push?author=Pieter&device=T&sensor=ts&value=22</i>\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                      /data?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device and/or sensor\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                    <a href=\"http://www.biomodd.xyz/data?author=Pieter\" target=\"_blank\">\n                      /data?author=Pieter\n                    </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                  <a href=\"http://www.biomodd.xyz/data?device=Test&author=Pieter\" target=\"_blank\">\n                    /data?device=Test&author=Pieter\n                      </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter and device \"Test\"\n                  <br/>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    Store and retrieve data (WEBSOCKET)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/push\" with an object (js) with the fields:  author, device, sensor, value\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/data\" with an object (js) with the fields:  author, device and/or sensor,\n                    you will get back a list (js) which contains the selection (AND logic).\n                </theme.Text>\n                <br/><br/>\n                <theme.Wrapped>\n                    <theme.Container>\n                        <Input label=\"author\" value={author} setValue={setAuthor} />\n                        <Input label=\"device\" value={device} setValue={setDevice} />\n                        <Input label=\"sensor\" value={sensor} setValue={setSensor}/>\n                    </theme.Container>\n                </theme.Wrapped>\n                <br/>\n                \n                <theme.Text style={{width: \"auto\"}}>\n                    Search for entries <br/> \n                    author: {author?author:\"any\"}, <br/>\n                    device: {device?device:\"any\"}, <br/>\n                    sensor: {sensor?sensor:\"any\"}\n                </theme.Text>\n                <br/><br/>\n                &nbsp;&nbsp;<button style={{\n                    fontSize: \"2em\",\n                    background: \"blue\",\n                    color: \"white\",\n                    paddingLeft: \"10px\"\n                }} onClick={()=>{\n                    const rv = {};\n                    if (author && author!==''){\n                        rv.author = author;\n                    }\n                    if (device && device!==''){\n                        rv.device = device;\n                    }\n                    if (sensor && sensor!==''){\n                        rv.sensor = sensor;\n                    }\n                    socket.emit(\"/data\", rv)\n                }}> GO\n                    \n                    </button>\n\n                    <br/><br/><br/>\n\n                    <theme.Text>\n                    {returnData? returnData:null}\n                    </theme.Text>\n                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n      </Row> \n}\n\nexport default Server;\n\n\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport { NavLink } from 'react-router-dom';\nimport Logo from '../assets/logo.svg'\n\nconst Nav = ()=>{\n    const theme = useSelector(state => state.data.theme);\n\n    if (!theme){\n        return null;\n    }\n\n    return <Row center=\"xs\">\n\n        <Col xs={8} sm={2}>\n            <NavLink to=\"/\">\n            <img src={Logo} style={{width: \"100%\"}}/>\n            </NavLink>\n        </Col>\n        <Col xs={12} sm={10}>\n            <br/><br/>\n            <NavLink to=\"/\">\n            <theme.Title style={{color: \"white\", fontSize: \"4em\"}}>\n                &nbsp;BIOMODD [BRG<sup>13</sup>]\n            </theme.Title>\n            </NavLink>\n            <theme.Container>\n            <theme.Text>\n                <NavLink to=\"/game\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST GAME\n                </NavLink>\n                <NavLink to=\"/server\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> TEST SERVER\n                </NavLink>\n                <NavLink to=\"/\" style={{color: \"white\"}}>\n                &nbsp;&nbsp;&nbsp;-> HOME\n                </NavLink>\n            </theme.Text>\n            </theme.Container>\n            \n\n        </Col>\n\n       \n    </Row>\n\n}\n\nexport default Nav;\n\n\n{/* <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title>\n                    GoTo\n                </theme.Title>\n                <theme.Text>\n                  <ul>\n                    <li onClick={getScroller(newsref)}>\n                      -> news\n                    </li>\n                    <li onClick={getScroller(gameref)}>\n                      -> game\n                    </li>\n                    <li onClick={getScroller(restref)}>\n                      -> store and retrieve data (RESTful)\n                    </li>\n                    <li onClick={getScroller(socketref)}>\n                      -> store and retrieve data (WEBSOCKET)\n                    </li>\n                  </ul>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container> */}","// ===============================\n//      A U X\n// ===============================\nexport const getPointOnCircle = (p5, centrum, offset, division, section)=>{\n    let angle = ((2 * Math.PI) / division) * section;\n    let pos = p5.createVector(Math.cos(angle), Math.sin(angle));\n    pos.mult(offset);\n    pos.add(centrum);\n    return pos;\n}\n\n\n\nfunction sqr(x) { return x * x }\nfunction dist2(v, w) { return sqr(v.x - w.x) + sqr(v.y - w.y) }\nfunction distToSegmentSquared(p, v, w) {\n    var l2 = dist2(v, w);\n    if (l2 == 0) return dist2(p, v);\n    var t = ((p.x - v.x) * (w.x - v.x) + (p.y - v.y) * (w.y - v.y)) / l2;\n    t = Math.max(0, Math.min(1, t));\n    return dist2(p, { x: v.x + t * (w.x - v.x),\n        y: v.y + t * (w.y - v.y) });\n}\nexport const distToSegment = (p, v, w) =>{ return Math.sqrt(distToSegmentSquared(p, v, w)); }\n\n\n\n\nconst eps = 0.0000001;\nconst between = (a, b, c) => a - eps <= b && b <= c + eps;\n\nexport const segment_intersection = (x1, y1, x2,y2, x3, y3, x4, y4) => {\n\n\n    var x = ((x1*y2-y1*x2)*(x3-x4)-(x1-x2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    var y = ((x1*y2-y1*x2)*(y3-y4)-(y1-y2)*(x3*y4-y3*x4)) /\n        ((x1-x2)*(y3-y4)-(y1-y2)*(x3-x4));\n\n    if(\n        (isNaN(x) || isNaN(y)) ||\n        (x1>=x2 && !between(x2, x, x1) || !between(x1, x, x2)) ||\n        (y1>=y2 && !between(y2, y, y1) || !between(y1, y, y2)) ||\n        (x3>=x4 && !between(x4, x, x3) || !between(x3, x, x4)) ||\n        (y3>=y4 && !between(y4, y, y3) || !between(y3, y, y4))\n    ) {\n        return false;\n    }\n\n    return true; //{x: x, y: y};\n\n};\n\n\n\nexport const mouseV = (p5)=>p5.createVector(p5.mouseX, p5.mouseY);","// ========================================\n//      I N T E R A C T I V E  O B J E C T\n// ========================================\n// an interactive object, that knows when clicked or dragged\n// currently assumes it is round\n\nexport const IO_STATE = Object.freeze({\n    UNSELECTED: \"unselected\",\n    CLICKED: \"clicked\",\n    HOVERING: \"hovering\",\n    DRAGGED: \"dragged\"\n})\n\nexport class InteractiveObject {\n    \n    constructor(location, size){\n        this.location = location;\n        this.size = size;\n        this.state = IO_STATE.UNSELECTED;\n    }\n\n    isOver(loc){\n        return loc.dist(this.location) < this.size/2;\n    }\n\n    isCurrentOver(p5){\n        return this.isOver(p5.createVector(p5.mouseX, p5.mouseY));\n    }\n\n    mousePressed(p5){\n        if (this.isCurrentOver(p5)){\n            this.state = IO_STATE.CLICKED;\n\n            // DEBUG: print id of object on click (if present)\n            if(this.id!== undefined) console.log(this.id);\n        }\n    }\n\n    mouseReleased(p5){\n        this.state = IO_STATE.UNSELECTED;\n        this.mouseMoved(p5);\n    }\n\n    mouseDragged(p5){\n        if (this.state !== IO_STATE.UNSELECTED){\n            this.state = IO_STATE.DRAGGED;\n        }   \n    }\n\n    mouseMoved(p5){\n        if (this.state === IO_STATE.UNSELECTED && this.isCurrentOver(p5)){\n            this.state = IO_STATE.HOVERING;\n        } else if (this.state === IO_STATE.HOVERING && !this.isCurrentOver(p5)){\n            this.state = IO_STATE.UNSELECTED;\n        }\n    }\n}","import {IO_STATE, InteractiveObject} from './interactiveObject.js'\n\nimport {distToSegment} from './auxi'\n\n// ===============================\n//      P L A N T\n// ===============================\n// Them plants\n\nclass Plant extends InteractiveObject {\n    constructor({location, size, color, alternativeColor}){\n        super(location, size);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.collisionColor = 'red';\n        this.colorplaceholder = color;\n    }\n\n\n\n\n    detectCollision(lights){\n        let col = false;\n        for (let light of lights.values()) {\n            for (let j = 0; j < light.beam.segments.length; j++) {\n                var segment = light.beam.segments[j];\n\n                let line_v = {x: segment.p1_x, y: segment.p1_y};\n\n                let line_w = {x: segment.p2_x, y: segment.p2_y};\n\n                let point =  {x: this.location.x, y: this.location.y};\n                if (distToSegment(point, line_v, line_w) < this.size/2){   // collision\n                    col = true;\n                }\n\n            }\n        }\n        if (col) {\n            this.color = this.collisionColor;\n        } else {\n            this.color = this.colorplaceholder\n        }\n\n    }\n    draw(p5){\n        p5.noStroke();\n        if (this.state === IO_STATE.UNSELECTED || this.state === IO_STATE.HOVERING){\n            p5.fill(this.color);\n        } else {\n            if (this.state === IO_STATE.DRAGGED ){\n                this.location.x = p5.mouseX;\n                this.location.y = p5.mouseY;\n            }\n            p5.fill(this.alternativeColor);\n        }\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n        \n        p5.circle(this.location.x, this.location.y, size);\n    }\n}\n\nexport default Plant;","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './auxi'\nimport p5 from \"react-p5\"\n// ===============================\n//      L I G H T\n// ===============================\n// The object that emits a beam of light\n\n// the handle that allows for the rotation of the light\nclass Handle extends InteractiveObject {\n    constructor (location, size, color){\n        super(location, size);\n        this.color = color;\n    }\n\n    draw(p5){\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.location.x, this.location.y, this.state===IO_STATE.UNSELECTED?this.size:this.size*1.2);\n    }\n}\n\n\nclass Segment {\n    constructor(p1_x, p1_y, p2_x, p2_y, color, mirror = null, creatorMirror = null){\n        this.p1_x = p1_x;\n        this.p1_y = p1_y;\n        this.p2_x = p2_x;\n        this.p2_y = p2_y;\n        this.color = color;\n        this.mirror = mirror;\n        this.creatorMirror = creatorMirror;\n    }\n}\n\n\nclass Beam {\n\n    constructor(origin, direction, color, mirrors, p5){\n        this.origin = origin;\n        this.direction = direction;\n        this.color = color;\n        this.segments = [];\n        this.mirrors = mirrors;\n        //this.createSegmentZero(p5);\n        //this.createSegment(this.direction, this.origin, mirrors, p5);\n\n        // debug: keep track of calculated intersection points\n        this.intersectPoints = [];\n    }\n\n    setDirection(direction, p5){\n        this.direction = direction;\n        //this.createSegmentZero(p5);\n        //this.segments[0].direction = direction;\n    }\n\n\n    /* New function to cast a beam: \n    takes point of origin and direction\n    this function creates a beam and then checks if it reflects off a mirror (another new function);\n    on reflection it will create a segment, add it to the array and cast a new beam from the reflection point\n    */\n    cast(direction, startPoint, p5){\n        // draw from point of origin in direction\n        const beam = p5.createVector(startPoint).set(direction);\n        beam.mult(p5.width);\n        beam.add(startPoint);\n        \n        // check beam for reflection (function)\n        let reflectionData = this.reflect(startPoint, beam, direction, p5);\n        if(reflectionData!==false) {\n            // cut off this beam on the reflection point\n            // create segment and add to segments array\n            this.segments.push(new Segment(startPoint.x, startPoint.y, reflectionData.x, reflectionData.y, this.color));\n            // cast new beam from reflectionpoint\n            let reflectionStart = p5.createVector(reflectionData.x, reflectionData.y);\n            this.cast(reflectionData.direction, reflectionStart, p5);\n        } else {\n            // no reflection has been detected\n            this.segments.push(new Segment(startPoint.x, startPoint.y, beam.x, beam.y, this.color));\n        }\n    }\n\n\n\n    reflect(beamStart, beamEnd, direction, p5){\n\n        let intersectionPoints = [];\n\n        // loop through mirrors\n        for(let i=0; i<this.mirrors.length; i++) {\n            let mirrorStart = this.mirrors[i].getPoints()[0];\n            let mirrorEnd = this.mirrors[i].getPoints()[1];\n\n            //if(this.mirrors[i].id == \"mirror_0\") console.log(\"x3: \"+ mirrorStart.x + \", y3: \"+ mirrorStart.y + \" | x4: \"+ mirrorEnd.x + \", y4: \"+ mirrorEnd.y);\n\n            // find the intersection \n            // see algorithm at https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line_segment\n            let t = ((mirrorEnd.x - mirrorStart.x) * (beamStart.y - mirrorStart.y) - (mirrorEnd.y - mirrorStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n            let u = ((beamEnd.x - beamStart.x) * (beamStart.y - mirrorStart.y) - (beamEnd.y - beamStart.y) * (beamStart.x - mirrorStart.x)) / ((mirrorEnd.y - mirrorStart.y) * (beamEnd.x - beamStart.x) - (mirrorEnd.x - mirrorStart.x) * (beamEnd.y - beamStart.y));\n\n            // check t & u to see if intersection is found\n            if((t>=0 && t<=1) && (u>=0 && u<=1)) {\n                // calculate intersectionpoint x & y, and the distance to the startpoint\n                let x = beamStart.x + t * (beamEnd.x - beamStart.x);\n                let y = beamStart.y + t * (beamEnd.y - beamStart.y);\n                let distance = p5.dist(beamStart.x, beamStart.y, x, y);\n                // save for later\n                intersectionPoints.push({x: x, y: y, distance: distance, mirror: i, direction: 0});\n            }\n            \n        }\n\n        // exit if no points have been found\n        if(intersectionPoints.length===0) {\n            return false;\n        } else {\n            let intersectionPoint = {};\n            // sort the found intersectionpoints by distance\n            if(intersectionPoints.length==1) {\n                // check if the one hit has a distance of 0\n                // this means it is a beam that has already reflected and does not hit anything else other than the starting mirror\n                if(intersectionPoints[0].distance==0) {\n                    return false;\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n            }  else {\n                // sort if there is more than one reflection point\n                intersectionPoints.sort((a,b) => (a.distance > b.distance) ? 1 : -1);\n\n                // check if the first hit has a distance of 0 (hit on the mirror from which a beam starts)\n                if(intersectionPoints[0].distance==0) {\n                    // skip the hit with distance 0\n                    intersectionPoint = intersectionPoints[1];\n                } else {\n                    intersectionPoint = intersectionPoints[0];\n                }\n                \n            }\n            let newDirection = p5.createVector(-direction.x, direction.y);\n            intersectionPoint.direction = newDirection;\n            this.intersectPoints.push(intersectionPoint);\n            \n            // calculate angle\n            // NOTE: this will have to be redone when the mirrors can rotate.... worries for later\n            return intersectionPoint;\n        }\n\n    }\n\n\n    /*\n    // old. To be replaced with new createSegment function\n    createSegmentZero(p5){\n        const p2 = p5.createVector(0, 0).set(this.direction);\n        p2.mult(p5.width);\n        p2.add(this.origin);\n        this.segments = [];\n        this.segments[0]= new Segment(this.origin.x, this.origin.y, p2.x, p2.y, this.color);\n    }\n    // old. New way of creating segments and checking reflections should make this unneccesary\n    revert(i, p5){\n        console.log(\"rev\");\n        //console.log(this.segments);\n        //console.log(i);\n        //var lastSeg  = this.segments[i];\n        //this.segments.splice(i);\n        //this.segments = [];\n        //this.createSegmentZero(p5);\n        //this.segments[this.segments.length] = lastSeg;\n        this.segments = [];\n        this.createSegmentZero(p5);\n    }\n    // old. To be replaced with new createSegment() function\n    addSegment(p5, i, x, y, angle, color, mirror){\n        var lastSeg  = this.segments[i];\n        this.segments.splice(i);\n        // calc enddddddddd\n        //var v = p5.createVector(x, y);\n        //var v2 = p5.\n        //var v = window.p5.Vector.fromAngle(Math.PI/2, 800);\n        //let x2 = v.x;//x+(800 * Math.cos(angle)); //= Math.cos(angle);//\n        angle = angle %(2*Math.PI);\n        //if (angle < Math.PI){\n            angle = Math.PI - angle;\n\n        //} else {\n           // angle =  2*Math.PI - angle;\n        //}\n\n        angle = angle -Math.PI/2;\n        while (angle < 0) {\n            angle+=(Math.PI*2);\n        }\n        let n_ang = 4.7124;\n        let x2 = x+(800 * Math.cos(angle )); //= Math.cos(angle);//\n\n        //x2 *=800;\n        //x2= x + x2 ;\n        //x2 = 800 - x2;\n        //let y2 =  v.y;//y+(800 * Math.sin(angle)); // Math.sin(angle) ;//\n        let y2 =  y+(800 * Math.sin(angle)); // Math.sin(angle) ;//\n        //y2 *=800;\n        //y2=y- y2;\n        //p5.push();\n        //p5.translate(x,y);\n        this.segments[this.segments.length] = new Segment( lastSeg.p1_x, lastSeg.p1_y, x, y, color, mirror);\n        this.segments[this.segments.length] = new Segment( x, y, x2, y2, color, null, mirror);\n\n    }\n\n    // old draw function: \n    draw(p5){\n        p5.noFill();\n        for (let i=0; i<this.segments.length; i++){\n            p5.stroke(this.segments[i].color);\n            p5.line(this.segments[i].p1_x, this.segments[i].p1_y, this.segments[i].p2_x, this.segments[i].p2_y);\n        }\n    }\n    */\n\n    // new draw function: simply calls cast to calculate and draw this beam\n    draw(p5) {\n\n        // reset segments\n        this.segments = [];\n        // debug: points of intersection\n        this.intersectPoints = [];\n        // cast first beam (this will populate the segments array)\n        this.cast(this.direction, this.origin, p5);\n        \n        /*\n        // debug: show intersect points\n        for(let j=0; j<this.intersectPoints.length; j++) {\n            p5.fill(255, 0, 0);\n            p5.circle(this.intersectPoints[j].x, this.intersectPoints[j].y, 10);\n        }\n        */\n        \n        \n        p5.noFill();\n\n        // loop through and draw segments\n        for (let i=0; i<this.segments.length; i++){\n            p5.stroke(this.segments[i].color);\n            p5.line(this.segments[i].p1_x, this.segments[i].p1_y, this.segments[i].p2_x, this.segments[i].p2_y);\n        }\n    }\n}\n\nclass Light extends InteractiveObject {\n    constructor({color, size, location, controlOffset, strokeWeight}, mirrors, p5){\n        super(location, size);\n        this.color = color;\n        this.controlOffset = controlOffset;\n        this.strokeWeight = strokeWeight;\n\n        this.handle = new Handle(p5.createVector(0, 0), 10, this.color);\n        this.beam = new Beam(this.location, this.getDirection(p5), color, mirrors, p5);\n        const r = ()=>p5.random(-this.handleOffset(), this.handleOffset());\n        this.moveHandle(p5, p5.createVector().set(this.location).add(p5.createVector(r(), r())))        \n    }\n\n    draw(p5){\n        if (this.handle.state === IO_STATE.DRAGGED){\n            this.moveHandle(p5);\n        }\n\n        // draw light\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.location.x, this.location.y, this.size);\n        p5.noFill();\n        p5.strokeWeight(this.strokeWeight);\n        p5.stroke(this.color);\n        p5.circle(this.location.x, this.location.y, this.size + this.controlOffset);\n\n        // draw handle\n        this.handle.draw(p5);\n\n        // draw beam\n        this.beam.draw(p5);\n    }\n\n    handleOffset(){\n        return (this.controlOffset+this.size)/2;\n    }\n\n    getDirection(p5){\n        const direction = p5.createVector(0,0).set(this.location);\n        direction.sub(this.handle.location);\n        direction.normalize();\n        return direction;\n    }\n\n    moveHandle(p5, loc){\n\n        if (!loc){\n            loc = mouseV(p5);\n        } \n\n        // we move the handle in such a way that it resembles\n        // the location of the mouse while dragging;\n        const diff = p5.createVector(0,0).set(this.location).sub(loc);\n        \n        // limit to handleoffset\n        diff.normalize();\n        diff.mult(-this.handleOffset());\n\n        // add to center\n        diff.add(this.location);\n        this.handle.location.set(diff);\n        this.beam.setDirection(this.getDirection(p5), p5);\n    }\n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        super.mousePressed(p5);\n        this.handle.mousePressed(p5);\n    }\n\n    mouseReleased(p5){\n        super.mouseReleased(p5);\n        this.handle.mouseReleased(p5);\n    }\n\n    mouseDragged(p5){\n        super.mouseDragged(p5);\n        this.handle.mouseDragged(p5);\n    }\n\n    mouseMoved(p5){\n        super.mouseMoved(p5);\n        this.handle.mouseMoved(p5);\n    }    \n}\n\nexport default Light;","import {InteractiveObject, IO_STATE} from './interactiveObject.js'\nimport {segment_intersection} from \"./auxi\";\n// ===============================\n//      P L A N T\n// ===============================\n// Them plants\n\nclass Mirror extends InteractiveObject {\n    constructor({location, size, color, alternativeColor, direction, id}){\n        super(location, size);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n        this.direction = direction;\n        this.rotation = 0;\n        this.strokeWeight = 5;\n        // DEBUG: adding an id to be able to see if there is a pattern to which mirror is breaking.\n        this.id = \"mirror_\"+id;\n\n        console.log(this.size);\n    }\n\n    isOver(loc){\n        let x = loc.x;\n        let y = loc.y;\n        return this.location.x <= x && x <= this.location.x + this.strokeWeight &&\n            this.location.y <= y && y <= this.location.y + this.size;\n    }\n\n    checkLineIntersection(l11_x, l11_y, l12_x, l12_y, l21_x, l21_y, l22_x, l22_y) {\n        if ((l11_x === l21_x)  && ((l12_y < l21_y) && (l11_y > l21_y))) {\n            return true;\n        }\n        return (l11_x === l22_x) && ((l12_y < l22_y) && (l11_y > l22_y));\n\n    };\n\n\n\n\n    findLineIntersection(l11_x, l11_y, l12_x, l12_y, l21_x, l21_y, l22_x, l22_y) {\n        // if the lines intersect, the result contains the x and y of the intersection and boolean for whether line segment contains the point\n        let denominator, a, b, numerator1, numerator2, result = {\n            inter: false,\n            x: null,\n            y: null,\n        };\n        denominator = ((l22_y - l21_y) * (l12_x - l11_x)) - ((l22_x - l21_x) * (l12_y - l11_y));\n        if (denominator === 0) {\n            return result;\n        }\n        a = l11_y - l21_y;\n        b = l11_x - l21_x;\n        numerator1 = ((l22_x - l21_x) * a) - ((l22_y - l21_y) * b);\n        numerator2 = ((l12_x - l11_x) * a) - ((l12_y - l11_y) * b);\n        a = numerator1 / denominator;\n        b = numerator2 / denominator;\n\n        // if we cast these lines infinitely in both directions, they intersect here:\n        result.x = l11_x + (a * (l12_x - l11_x));\n        result.y = l11_y + (a * (l12_y - l11_y));\n\n                // it is worth noting that this should be the same as:\n               // x = line2StartX + (b * (line2EndX - line2StartX));\n               // y = line2StartX + (b * (line2EndY - line2StartY));\n\n        // if line1 is a segment and line2 is infinite, they intersect if:\n        if (a > 0 && a < 1 && b >= 0 && b <= 1) {\n            result.inter = true;\n        }\n\n        return result;\n    };\n\n    getPoints(){\n        let x = this.location.x;\n        let y = this.location.y;\n        let p1 = {\n            x: x,\n            y: y,\n        };\n        let p3 = {\n            x: x,\n            y: y + this.size,\n        };\n        return [p1, p3];\n    }\n\n    \n    checkSegments(lights, p5 ){\n        let rectLine = this.getPoints();\n        for (let light of lights.values()) {\n                for (let j = 0; j < light.beam.segments.length; j++) {\n                    let disCon = false;\n                    var segment = light.beam.segments[j];\n                    if (this !==  segment.creatorMirror) {\n                        if (this === segment.mirror) {\n                            disCon = true;\n                        }\n                        var inter = this.findLineIntersection(rectLine[0].x, rectLine[0].y, rectLine[1].x, rectLine[1].y, segment.p1_x, segment.p1_y, segment.p2_x, segment.p2_y);\n                        if (inter.inter) {\n                            disCon = false;\n\n                            let theta1 = Math.atan2(rectLine[0].y - rectLine[1].y, rectLine[0].x - rectLine[1].x);\n                            let theta2 = Math.atan2(segment.p1_y - inter.y, segment.p1_x- inter.x);\n\n                            let diff = Math.abs(theta1- theta2);\n                            let angle = diff ;\n\n                            if (inter.x > segment.p1_x && inter.y > segment.p1_y){\n                                angle = (Math.PI*2) - angle;\n                            }\n                            light.beam.addSegment(p5, j, inter.x, inter.y, angle, light.color, this);\n                        }\n                        if (disCon) {\n                            light.beam.revert(j, p5);\n                        }\n                    }\n            }\n        }\n\n    }\n\n    draw(p5){\n        //p5.noStroke();\n        p5.strokeWeight(this.strokeWeight);\n        if (this.state === IO_STATE.UNSELECTED || this.state === IO_STATE.HOVERING){\n            p5.stroke(this.color);\n        } else {\n            if (this.state === IO_STATE.DRAGGED ){\n                this.location.x = p5.mouseX ;\n                this.location.y = p5.mouseY ;\n                p5.stroke(this.color);\n            }\n            //p5.fill(this.alternativeColor);\n        }\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n\n        p5.line(this.location.x, this.location.y, this.location.x, this.location.y+size);\n        //p5.stroke(200);\n    }\n}\n\nexport default Mirror;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport {getPointOnCircle} from './auxi'\nimport Plant from './plant'\nimport Light from './light'\nimport Mirror from \"./mirror\";\n\n// ===============================\n// ===============================\n//      G A M E\n// ===============================\n// ===============================\nexport default ({socket}) => {\n\n    // enumerations\n\n    // globals\n    const lights        = new Map();\n    const plants        = [];\n\n    const mirrors        = [];\n\n\n    // -- keep track of all objects we want to draw \n    // --- expects they implemented a draw(p5) method\n    const toDraw        = [];\n\n    // -- keep track of all objects we want to interact with \n    // --- expects they implemented all interactive methods as defined in the InteractiveObject class\n    const toInteract    = [];\n\n    const settings = {\n        background: \"yellow\"\n    }\n\n    const lightSettings = {\n        size: 30, \n        controlOffset: 20,\n        offset: .4,\n        strokeWeight: 2\n    };\n\n    const plantSettings = {\n        amount: 1,\n        size: 40,\n        color: \"darkgreen\",\n        alternativeColor: \"lightgreen\"\n    }\n\n    const mirrorSettings = {\n        amount: 5,\n        size: 50,\n        color: \"magenta\",\n        alternativeColor: \"0f0\"\n    }\n    \n    // ===============================\n    //      A U X\n    // ===============================\n    const getCenter = (p5)=>{\n        return p5.createVector(p5.width*.5, p5.height*.5);\n    }\n\n    const getRandomPoint = (p5)=> p5.createVector(Math.random()*p5.width, Math.random()*p5.height);\n    \n    // ===============================\n    //      S E T U P\n    // =============================== \n\tconst setup = (p5, canvasParentRef) => {\n        // setup canvas\n        if (canvasParentRef){\n            p5.createCanvas(500, 500).parent(canvasParentRef);\n        }\n\n        // create mirrors\n        for (let i = 0; i < mirrorSettings.amount; i++){\n            mirrors[i] = new Mirror({location: getRandomPoint(p5), ...mirrorSettings, id: i});\n            toDraw.push(mirrors[i]);\n            toInteract.push(mirrors[i]);\n        }\n\n\n        // Create lights\n        //let colors = [\"green\"];\n        let colors = [\"red\", \"green\", \"blue\"];\n        colors.forEach((color, i)=>{\n            lights.set(color, new Light(\n                {\n                    color, \n                    location: getPointOnCircle(p5, getCenter(p5), p5.width*lightSettings.offset, 3, i),\n                    ...lightSettings\n            }, mirrors, p5));\n            toDraw.push(lights.get(color));\n            toInteract.push(lights.get(color));\n        })\n\n        // create plants\n        for (let i = 0; i < plantSettings.amount; i++){\n            plants[i] = new Plant({location: getRandomPoint(p5), ...plantSettings});\n            toDraw.push(plants[i]);\n            toInteract.push(plants[i]);\n        }\n\n\n        // setup sockets\n        socket.on(\"/gameUpdateWorld\", (gameWorld)=>{\n            // world = gameWorld;\n        })\n\t};\n\n\n    // ===============================\n    //      D R A W\n    // =============================== \n\tconst draw = (p5) => {\n\t\tp5.background(settings.background);\n        toDraw.forEach(td=>td.draw(p5));\n        plants.forEach(mr=>mr.detectCollision(lights));\n\t};\n\n    // ===============================\n    //      I / O\n    // =============================== \n\tconst mousePressed = (p5)=>{\n        toInteract.forEach(ti=>ti.mousePressed(p5));\n\t}\n\n    const mouseReleased = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseReleased(p5));\n    }\n\n    const mouseDragged = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseDragged(p5));\n    }\n\n    const mouseMoved = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseMoved(p5));\n    }\n\n\treturn <Sketch  setup={setup} \n                    draw={draw} \n                    mousePressed={mousePressed} \n                    mouseReleased={mouseReleased} \n                    mouseDragged={mouseDragged}\n                    mouseMoved={mouseMoved}\n                    \n                    />;\n};\n","import React, {useEffect, useState} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Grid, Col, Row, Theme} from '../theme'\nimport { io } from \"socket.io-client\";\nimport Spectrum from '../components/spectrum'\n\nconst Game = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const [gameSettings, setGameSettings] = useState(undefined);\n    const [returnData, setReturnData] = useState(undefined);\n    let socket;\n\n    useEffect(()=>{\n        if (!gameSettings && socket){\n          socket.emit(\"/gamesettings\");\n        }\n      })\n\n\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n\n    socket.on(\"/gamesettings\", (settings)=>{\n        if (!gameSettings){\n          setGameSettings(settings);  \n        }\n      })\n  \n      socket.on(\"/push\", (results)=>{\n  \n          console.log(results)\n  \n          setReturnData(results.map(r=><>\n              {JSON.stringify(r)} <br/>\n          </>))\n      } )\n\n    if (!theme){\n        return null;\n    }\n\n    return <Row center=\"xs\">\n    <Col xs={12} sm={8} md={6}>\n    <theme.Container>\n      <br/><br/>\n      <theme.Wrapped>\n        <theme.Container>\n          <theme.Title>\n              GAME\n          </theme.Title>\n          <br/>\n\n          <theme.SubTitle>\n            Simple version\n          </theme.SubTitle>\n          <theme.Text>\n            Proof of concept game version with simulated data - will be updated as the development progresses\n            <br/>\n            <a href=\"https://docs.google.com/document/d/1EDprQQhg2VJHW0SUoAcNhATV1XVfRxaYFhYVQjl9Rd8/edit\" target=\"_blank\">\n              --> Game concept master\n            </a>\n            <br/><br/>\n            {gameSettings?<Spectrum socket={socket} /> : \"LOADING\" }\n            \n          </theme.Text>\n        </theme.Container>\n      </theme.Wrapped>\n    </theme.Container>\n  </Col>\n  </Row>\n}\n\nexport default Game;\n\n\n","import Theme from '../theme'\n\n\nclass BuilderTheme extends Theme {\n    constructor(){\n      super()\n      this.font = \"OfficeCodePro\"\n      this.sizes.normal = \"1.2em\"\n    }\n  \n    get defaultFont(){\n      return `${super.defaultFont}font-weight: 400;`\n    }\n  \n    get Title(){\n      return this.styled(super.Title)` font-weight: bold;`\n    }\n  }\n  \n  \n\n  export default BuilderTheme;","import React, {useState, useEffect, useRef} from 'react';\nimport { Grid, Col, Row} from '../theme'\nimport { useSelector } from \"react-redux\";\n\n\nimport BlockContent from '@sanity/block-content-to-react';\nimport { NavLink } from 'react-router-dom';\nimport Moment from 'react-moment';\n\n\nconst Home = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const news = useSelector(state => state.data.news);\n    const events = useSelector(state=>state.data.events)\n    const faqs = useSelector(state=>state.data.faqs)\n    \n    \n    \n    const newsref = useRef(null);\n    \n\n    if (!theme){\n        return null;\n    } else {\n\n      const getEvents = (events)=>events.map(({title, description, available, moment})=><div key={title}>\n      <theme.SubTitle>\n        <Moment format=\"DD/MM\">{moment}</Moment> &nbsp;&nbsp; {title}\n      </theme.SubTitle>\n      <theme.Text>\n          <BlockContent blocks={description} />\n      </theme.Text>\n      <theme.Text>\n          <i>\n            Available places: {available}\n          </i>\n      </theme.Text>\n      <br/>                  <br/>                  <br/>\n    </div>)\n        \n  \n    return <Row align=\"center\">\n      \n        \n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    NEWS\n                </theme.Title>\n                <br/>\n\n                {news?\n\n                news.map(({title, description, images})=><>\n                  <theme.SubTitle key={title}>\n                    {title}\n                  </theme.SubTitle>\n                  <theme.Text>\n                      <BlockContent blocks={description} />\n                  </theme.Text>\n                  {(images && images.length)?\n                  images.map(({title, description, image})=><>\n                      <theme.Text key={title}>\n                        <b>\n                        {title}\n                        </b>\n                      </theme.Text>\n                      <img src={image} alt={title} style={{width: \"100%\"}} />\n                      <theme.Text>\n                        <i>\n                        <BlockContent blocks={description} />\n                        </i>\n                      </theme.Text>\n                  </>)\n                  : null}\n                  <br/>\n                </>)\n                \n                : <theme.Text>L O A D I N G</theme.Text>}\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    Frequently Asked Questions\n                </theme.Title>\n                <br/>\n\n                {faqs?\n                  faqs.map(({title, description})=><theme.Text key={title}>\n                    <b>\n                      {title}\n                    </b> <br/>\n                    <BlockContent blocks={description} />\n                  </theme.Text>)\n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                             \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title >\n                    EVENTS\n                </theme.Title>\n                <br/>\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) >= yesterday;\n                  }))                \n                : <theme.Text>L O A D I N G</theme.Text>}\n\n                <br/>\n                <theme.Title >\n                    PAST EVENTS\n                </theme.Title>\n                <br/>\n\n\n                {events?\n                  getEvents(events.filter((e)=>{\n                    const today = new Date()\n                    const yesterday = new Date(today)\n                    yesterday.setDate(yesterday.getDate() - 1)\n                    return new Date(e.moment) < yesterday;\n                  }))                \n                : null}                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        \n\n        \n\n      </Row>\n      \n    \n    }\n\n    \n  }\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Theme, {OverviewPage} from './theme'\nimport { Provider } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport { createBrowserHistory } from 'history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS as DATA_ACTIONS } from \"./reducers/DataReducer\"\nimport sanityclient from './client';\nimport Server from './components/server'\nimport Nav from './components/nav'\n\nimport { Grid, Col, Row} from './theme'\nimport Game from './components/game'\n\n\nimport './assets/fonts/'\nimport BuilderTheme from './services/Buildertheme'\nimport Home from './components/Home'\n\nconst DataHelper = () => {\n  const data = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.client && dispatch){\n      const cli = sanityclient(dispatch);\n      dispatch({ type: DATA_ACTIONS.SET_CLIENT, client: cli});\n    } \n\n    if (!data.theme && dispatch ){\n      const builder = new BuilderTheme();\n      dispatch({type: DATA_ACTIONS.SET_THEME, theme: new BuilderTheme()})\n      // dispatch({type: DATA_ACTIONS.SET_THEMES, themes: [new BuilderTheme()]})\n    }\n\n  })\n  return (\n    null\n  )\n}\n\n\nconst App =()=>{\n  const history = createBrowserHistory()\n  const theme = new BuilderTheme();\n\n  return (\n    <Provider store={Store}>\n    <DataHelper />\n      <Router history={history}>\n\n        <Grid>\n\n        \n\n        <Nav />\n        \n      \n        <span>\n       \n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/overview\" component={OverviewPage} />\n              <Route exact path=\"/server\" component={Server} />\n              <Route exact path=\"/game\" component={Game} />\n              \n              <Route component={Home}/>\n            </Switch>\n        </span>\n\n        </Grid>\n      </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// import './assets/fonts/OCP'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ef8c6e8.svg\";"],"sourceRoot":""}