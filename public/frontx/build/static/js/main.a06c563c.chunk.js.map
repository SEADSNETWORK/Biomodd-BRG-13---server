{"version":3,"sources":["theme/index.js","theme/pages/overview.jsx","reducers/DataReducer.js","rootreducer.js","Store.js","client/environment.js","client/index.jsx","services/Buildertheme.js","components/Input.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["OverviewPage","useSelector","state","data","theme","themes","Container","Wrapped","Theme","this","colors","primary","secondary","tertiary","text","defaultWrapWidth","font","sizes","normal","title","subtitle","medias","em","xs","sm","md","lg","px","query","onlySmall","largerthansm","mdandup","smallerthanmd","padding","pre","values","post","styled","children","EmptyDiv","content","defaultWrap","responsive","EmptySpan","defaultFont","div","Title","props","border","span","ACTIONS","Object","freeze","SET_CLIENT","Symbol","SET_NAV_OPEN","SET_THEME","SET_THEMES","SET_NEWS","initialState","client","navopen","window","innerWidth","news","rootReducer","combineReducers","action","type","middleware","applyMiddleware","thunkMiddleware","Store","createStore","envi","dev","location","hostname","status","document","printstatus","console","log","prevFetched","dispatch","environment","_","settings","sc","sanityClient","projectId","dataset","token","ignoreBrowserTokenWarning","useCdn","fetch","Promise","resolve","reject","then","catch","builder","imageUrlBuilder","DATA_ACTIONS","squareImage","url","width","image","height","BuilderTheme","Input","label","setValue","useState","name","setName","onSubmit","evt","preventDefault","value","onChange","e","target","Home","socket","author","setAuthor","device","setDevice","sensor","setSensor","undefined","gameSettings","setGameSettings","returnData","setReturnData","newsref","useRef","restref","socketref","gameref","useEffect","emit","io","transports","on","results","map","r","JSON","stringify","getScroller","ref","current","scrollIntoView","align","Text","onClick","SubTitle","href","description","images","blocks","length","src","alt","style","fontSize","background","color","paddingLeft","rv","DataHelper","useDispatch","cli","sanityclient","App","history","createBrowserHistory","store","Logo","float","exact","path","component","exacact","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"0vBAkBO,IAAMA,ECdE,WAAK,IAAD,EACSC,aAAY,SAAAC,GAAK,MAAI,CAACA,EAAMC,KAAKC,MAAOF,EAAMC,KAAKE,WAD5D,mBACRD,EADQ,UAIf,OAAKA,EAGM,kBAACA,EAAME,UAAP,KACK,kBAACF,EAAMG,QAAP,KACI,kBAACH,EAAME,UAAP,eAJT,WDeTE,E,WACF,aAAe,oBACXC,KAAKC,OAAS,CACZC,QAAS,QACTC,UAAW,QACXC,SAAU,OAGZJ,KAAKC,OAAOI,KAAO,CACfH,QAASF,KAAKC,OAAOE,UACrBA,UAAWH,KAAKC,OAAOC,SAG3BF,KAAKM,iBAAmB,EAExBN,KAAKO,KAAO,sBAEZP,KAAKQ,MAAQ,CACTC,OAAQ,QACRC,MAAO,MACPC,SAAU,SAGdX,KAAKY,OAAS,CACZC,GAAI,CACFC,GAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAENC,GAAI,CACFJ,GAAI,EACJC,GAAI,IACJC,GAAI,KACJC,GAAI,OAIRjB,KAAKY,OAAOO,MAAQ,CAChBC,UAAS,sBAAkBpB,KAAKY,OAAOM,GAAGH,GAAjC,OACTM,aAAY,sBAAkBrB,KAAKY,OAAOM,GAAGH,GAAG,EAApC,OACZO,QAAO,sBAAkBtB,KAAKY,OAAOM,GAAGF,GAAjC,OACPO,cAAa,sBAAkBvB,KAAKY,OAAOM,GAAGF,GAAG,EAApC,QAGjBhB,KAAKwB,QAAU,CACXV,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,I,uDAmBDQ,EAAKC,EAAQC,GACpB,MAAM,iBAAN,OACMF,EADN,aACcC,EAAOZ,IADrB,OAC0Ba,EAD1B,+DAGyC3B,KAAKY,OAAOM,GAAGH,GAHxD,kCAIUU,EAJV,aAIkBC,EAAOX,IAJzB,OAI8BY,EAJ9B,8EAOyC3B,KAAKY,OAAOM,GAAGF,GAPxD,kCAQUS,EARV,aAQkBC,EAAOV,IARzB,OAQ8BW,EAR9B,sFAWyC3B,KAAKY,OAAOM,GAAGD,GAXxD,kCAYUQ,EAZV,aAYkBC,EAAOT,IAZzB,OAY8BU,EAZ9B,wC,kCAZA,MAAM,SAAN,OAAgB3B,KAAKC,OAAOC,QAA5B,YAAuCF,KAAKM,iBAA5C,Q,kCAIA,MAAM,iBAAN,OAAwBN,KAAKO,KAA7B,wBAAiDP,KAAKQ,MAAMC,OAA5D,O,6BAIA,OAAOmB,M,8BA2BG,IAAD,OACT,OAAO,gBAAEC,EAAF,EAAEA,SAAF,OAAc,kBAACC,EAAD,CAAUC,QAAO,mBAAc,EAAKC,YAAnB,yBAAuDH,M,gCAGjF,IAAD,OACX,OAAO,gBAAEA,EAAF,EAAEA,SAAF,OAAc,kBAACC,EAAD,CAAUC,QAAS,EAAKE,WAAW,UAAW,EAAKT,QAAS,OAAQK,M,2BAGlF,IAAD,OACN,OAAO,gBAAEA,EAAF,EAAEA,SAAF,OAAc,kBAACK,EAAD,CAAWH,QAAS,EAAKI,aAAcN,M,4BAmB5D,OAAOD,IAAOQ,IAAd,IACMpC,KAAKmC,YACMnC,KAAKQ,MAAME,S,+BAK5B,OAAOkB,YAAO5B,KAAKqC,MAAZT,CAAP,IACiB5B,KAAKQ,MAAMG,c,KAuB9BmB,GAJUF,IAAOQ,IAAV,KACC,SAAAE,GAAK,OAAEA,EAAMC,UAGVX,IAAOQ,IAAV,KACR,SAAAE,GAAK,OAAEA,EAAMP,YAIbG,EAAYN,IAAOY,KAAV,KACT,SAAAF,GAAK,OAAEA,EAAMP,WAIJhC,I,iCEzLF0C,EAAUC,OAAOC,OAAO,CACjCC,WAAYC,OAAO,eACnBC,aAAcD,OAAO,gBACrBE,UAAWF,OAAO,cAClBG,WAAYH,OAAO,eACnBI,SAAUJ,OAAO,eAGfK,EAAe,CACnBC,OAAQ,KACRC,QAASC,OAAOC,WAAa,IAC7B3D,MAAO,KACPC,OAAQ,KACR2D,KAAM,MCNOC,EAJKC,YAAgB,CAClC/D,KDYa,WAAmC,IAAlCD,EAAiC,uDAAzByD,EAAcQ,EAAW,uCAE/C,OAAQA,EAAOC,MACb,KAAKlB,EAAQG,WACX,OAAO,eACFnD,EADL,CAEE0D,OAAQO,EAAOP,SAGnB,KAAKV,EAAQQ,SACX,OAAO,eACFxD,EADL,CAEE8D,KAAMG,EAAOH,OAGjB,KAAKd,EAAQK,aACX,OAAO,eACFrD,EADL,CAEE2D,QAASM,EAAON,UAGpB,KAAKX,EAAQM,UACX,OAAO,eACFtD,EADL,CAEEE,MAAO+D,EAAO/D,QAGlB,KAAK8C,EAAQO,WACX,OAAO,eACFvD,EADL,CAEEG,OAAQ8D,EAAO9D,SAGnB,QACE,OAAO,eACFH,OE7CLmE,EAAaC,YAAgBC,KAIpBC,EAFDC,YAAYR,EAAaI,G,yBCUxBK,EAlBK,WAChB,IAAMC,EAAoC,cAA7Bb,OAAOc,SAASC,UAAyD,cAA7Bf,OAAOc,SAASC,SACnEC,EAAqB,WAAN,OAAkBH,EAAI,QAAQ,UASnD,OAJIA,IACAI,SAAS5D,MAAQ,YAAc4D,SAAS5D,OAGrC,CACHwD,MACAG,SACAE,YAXgB,WAChBC,QAAQC,IAAIJ,M,yBCGdK,EAAc,GA0DLvB,EAxDO,SAACwB,GACnB,IAAMC,EAAcX,IAChBY,EAAIC,IAEFC,EAAKC,IAAa,CACpBC,UAAWJ,EAAEI,UACbC,QAASL,EAAEK,QACXC,MAAON,EAAEM,MACTC,2BAA2B,EAC3BC,QAAQ,IAGNC,EAAQ,SAACnE,GACX,OAAO,IAAIoE,SAAQ,SAACC,EAASC,GACrBf,EAAYvD,IACRyD,EAAYV,KACZM,QAAQC,IAAI,uBAEhBe,EAAQd,EAAYvD,KAEpB4D,EAAGO,MAAMnE,GACRuE,MAAK,SAAChG,GACHgF,EAAYvD,GAASzB,EACrB8F,EAAQ9F,MACTiG,MAAMF,OAKfG,EAAUC,IAAgBd,GAkBhC,OAXIH,EAAYV,KACZU,EAAYL,cAGhBe,EAAM,kIAAkII,MAAK,SAACnC,GAC1IiB,QAAQC,IAAIlB,GACZoB,EAAS,CAAEhB,KAAMmC,EAAa7C,SAAUM,YAKrC,CACH+B,QACAV,cACAmB,YAnBgB,SAACC,EAAKC,GACtB,OAAOL,EAAQM,MAAMF,GAAKC,MAAMA,GAAOE,OAAOF,GAAOD,S,sJCpB5CI,E,kDAjBb,aAAc,IAAD,8BACX,gBACK7F,KAAO,gBACZ,EAAKC,MAAMC,OAAS,QAHT,E,wDAOX,MAAM,GAAN,uF,4BAIA,OAAOT,KAAK4B,OAAL,6CAAA5B,OAAP,S,GAZqBD,G,QCuDZsG,MAzBR,YAAmC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAAW,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,KAOrC,OACE,0BAAMC,SALa,SAACC,GAClBA,EAAIC,iBACJN,EAASE,KAIT,+BACI,8BACKH,EADL,QAGF,2BACE3C,KAAK,OACLmD,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAQM,EAAEC,OAAOH,WARtC,OAYE,2BAAOnD,KAAK,SAASmD,MAAM,a,yBC4PpBI,GAxSF,WACT,IAWIC,EAXExH,EAAQH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,SACxC4D,EAAO/D,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK6D,QAFhC,EAGeiD,mBAAS,IAHxB,mBAGNY,EAHM,KAGEC,EAHF,OAIeb,mBAAS,IAJxB,mBAINc,EAJM,KAIEC,EAJF,OAKef,mBAAS,IALxB,mBAKNgB,EALM,KAKEC,EALF,OAM2BjB,wBAASkB,GANpC,mBAMNC,EANM,KAMQC,EANR,OAOuBpB,wBAASkB,GAPhC,mBAONG,EAPM,KAOMC,EAPN,KAQPC,EAAUC,iBAAO,MACjBC,EAAUD,iBAAO,MACjBE,EAAYF,iBAAO,MACnBG,EAAUH,iBAAO,MAGvBI,qBAAU,YACHT,GAAgBR,GACnBA,EAAOkB,KAAK,qBAMZlB,EAD6B,cAA7B9D,OAAOc,SAASC,UAAyD,cAA7Bf,OAAOc,SAASC,SACnDkE,aAAG,yBAA0B,CAAEC,WAAY,CAAC,eAE7CD,gBAGLE,GAAG,iBAAiB,SAAC1D,GACrB6C,GACHC,EAAgB9C,MAIpBqC,EAAOqB,GAAG,SAAS,SAACC,GAEhBjE,QAAQC,IAAIgE,GAEZX,EAAcW,EAAQC,KAAI,SAAAC,GAAC,OAAE,oCACxBC,KAAKC,UAAUF,GADS,IACL,qCAI5B,IAAMG,EAAc,SAACC,GACnB,OAAO,WACLA,EAAIC,QAAQC,mBAIhB,OAAKtJ,EAKE,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAKuJ,MAAM,UACX,kBAAC,IAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,kBAACrB,EAAME,UAAP,KACE,6BAAK,6BACL,kBAACF,EAAMG,QAAP,KACE,kBAACH,EAAME,UAAP,KACE,kBAACF,EAAM0C,MAAP,aAGA,kBAAC1C,EAAMwJ,KAAP,KACE,4BACE,wBAAIC,QAASN,EAAYf,IAAzB,WAGA,wBAAIqB,QAASN,EAAYX,IAAzB,WAGA,wBAAIiB,QAASN,EAAYb,IAAzB,wCAGA,wBAAImB,QAASN,EAAYZ,IAAzB,+CASV,kBAACvI,EAAME,UAAP,KACE,6BAAK,6BACL,kBAACF,EAAMG,QAAP,KACE,kBAACH,EAAME,UAAP,KACE,kBAACF,EAAM0C,MAAP,CAAa0G,IAAKhB,GAAlB,QAGA,6BAEA,kBAACpI,EAAM0J,SAAP,uBAGA,kBAAC1J,EAAMwJ,KAAP,yGAEE,6BACA,uBAAGG,KAAK,uFAAuFrC,OAAO,UAAtG,8BAGA,6BAAK,kCAUjB,kBAAC,IAAD,CAAKnG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpB,kBAACrB,EAAME,UAAP,KACE,6BAAK,6BACL,kBAACF,EAAMG,QAAP,KACE,kBAACH,EAAME,UAAP,KACE,kBAACF,EAAM0C,MAAP,CAAa0G,IAAKhB,GAAlB,QAGA,6BAECxE,EAEDA,EAAKmF,KAAI,gBAAEhI,EAAF,EAAEA,MAAO6I,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,OAAtB,OAAgC,oCACvC,kBAAC7J,EAAM0J,SAAP,KACG3I,GAEH,kBAACf,EAAMwJ,KAAP,KACI,kBAAC,IAAD,CAAcM,OAAQF,KAExBC,GAAUA,EAAOE,OACnBF,EAAOd,KAAI,gBAAEhI,EAAF,EAAEA,MAAO6I,EAAT,EAASA,YAAarD,EAAtB,EAAsBA,MAAtB,OAA+B,oCACtC,kBAACvG,EAAMwJ,KAAP,KACE,2BACCzI,IAGH,yBAAKiJ,IAAKzD,EAAO0D,IAAKlJ,EAAOmJ,MAAO,CAAC5D,MAAO,UAC5C,kBAACtG,EAAMwJ,KAAP,KACE,2BACA,kBAAC,IAAD,CAAcM,OAAQF,UAI1B,KACF,iCAGA,kBAAC5J,EAAMwJ,KAAP,2BASZ,kBAAC,IAAD,CAAKD,MAAM,UACT,kBAAC,IAAD,CAAKpI,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtB,kBAACrB,EAAME,UAAP,KACE,6BAAK,6BACL,kBAACF,EAAMG,QAAP,KACE,kBAACH,EAAME,UAAP,KACE,kBAACF,EAAM0C,MAAP,CAAa0G,IAAKd,GAAlB,yCAGA,6BACA,kBAACtI,EAAM0J,SAAP,mBAGA,kBAAC1J,EAAMwJ,KAAP,KACE,0BAAMU,MAAO,CAACC,SAAU,UAAxB,+BAGA,6BACA,8CALF,oCAME,6BANF,WAQE,6BACA,+EAEF,6BAAK,6BACL,kBAACnK,EAAM0J,SAAP,sBAGA,kBAAC1J,EAAMwJ,KAAP,KACE,0BAAMU,MAAO,CAACC,SAAU,UAAxB,+BAGA,6BACA,8CALF,mCAME,6BAAK,6BANP,WAQE,6BACA,2BACE,uBAAGR,KAAK,4CAA4CrC,OAAO,UAA3D,wBAIF,6BAdF,mFAgBE,6BAAK,6BAhBP,WAkBE,6BACA,2BACA,uBAAGqC,KAAK,wDAAwDrC,OAAO,UAAvE,oCAIA,6BAxBF,qGA0BE,kCAMV,kBAAC,IAAD,CAAKnG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtB,kBAACrB,EAAME,UAAP,KACE,6BAAK,6BACL,kBAACF,EAAMG,QAAP,KACE,kBAACH,EAAME,UAAP,KACE,kBAACF,EAAM0C,MAAP,CAAa0G,IAAKb,GAAlB,uCAGA,6BACA,kBAACvI,EAAM0J,SAAP,mBAGA,kBAAC1J,EAAMwJ,KAAP,6IAGA,6BAAK,6BACL,kBAACxJ,EAAM0J,SAAP,sBAGA,kBAAC1J,EAAMwJ,KAAP,qNAIA,6BAAK,6BACL,kBAACxJ,EAAMG,QAAP,KACI,kBAACH,EAAME,UAAP,KACI,kBAAC,EAAD,CAAOyG,MAAM,SAASQ,MAAOM,EAAQb,SAAUc,IAC/C,kBAAC,EAAD,CAAOf,MAAM,SAASQ,MAAOQ,EAAQf,SAAUgB,IAC/C,kBAAC,EAAD,CAAOjB,MAAM,SAASQ,MAAOU,EAAQjB,SAAUkB,MAGvD,6BAEA,kBAAC9H,EAAMwJ,KAAP,CAAYU,MAAO,CAAC5D,MAAO,SAA3B,sBACuB,6BADvB,WAEamB,GAAc,MAF3B,KAEmC,6BAFnC,WAGaE,GAAc,MAH3B,KAGmC,6BAHnC,WAIaE,GAAc,OAE3B,6BAAK,6BAnCP,WAoCc,4BAAQqC,MAAO,CACvBC,SAAU,MACVC,WAAY,OACZC,MAAO,QACPC,YAAa,QACdb,QAAS,WACR,IAAMc,EAAK,GACP9C,GAAmB,KAATA,IACV8C,EAAG9C,OAASA,GAEZE,GAAmB,KAATA,IACV4C,EAAG5C,OAASA,GAEZE,GAAmB,KAATA,IACV0C,EAAG1C,OAASA,GAEhBL,EAAOkB,KAAK,QAAS6B,KAhBb,OAqBR,6BAAK,6BAAK,6BAEV,kBAACvK,EAAMwJ,KAAP,KACCtB,GAAuB,YAxO7B,MCzCTsC,GAAa,WACjB,IAAMzK,EAAOF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAClCiF,EAAWyF,cAcjB,OAbAhC,qBAAU,WACR,IAAK1I,EAAKyD,QAAUwB,EAAS,CAC3B,IAAM0F,EAAMC,EAAa3F,GACzBA,EAAS,CAAEhB,KAAMmC,EAAalD,WAAYO,OAAQkH,IAGpD,IAAK3K,EAAKC,OAASgF,EAAU,CACX,IAAIyB,EACpBzB,EAAS,CAAChB,KAAMmC,EAAa/C,UAAWpD,MAAO,IAAIyG,QAMrD,MAiCWmE,GA5BJ,WACT,IAAMC,EAAUC,cACV9K,EAAQ,IAAIyG,EAElB,OACE,kBAAC,IAAD,CAAUsE,MAAO3G,GACjB,kBAAC,GAAD,MACE,kBAAC,IAAD,CAAQyG,QAASA,GACf,8BACE,yBAAKX,MAAO,CAACrI,QAAS,SACxB,yBAAKmI,IAAKgB,IAAMd,MAAO,CAACe,MAAO,OAAQ3E,MAAO,WAE5C,kBAACtG,EAAM0C,MAAP,CAAawH,MAAO,CAACG,MAAO,QAASF,SAAU,QAA/C,mBACsB,mCADtB,MAKE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,UAAW7D,KACjC,kBAAC,IAAD,CAAO8D,SAAO,EAACF,KAAK,YAAYC,UAAWxL,IAC3C,kBAAC,IAAD,CAAOwL,UAAW7D,UC/CZ+D,QACW,cAA7B5H,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAAS8G,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF/G,SAASgH,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEdhG,OAAM,SAAAiG,GACLpH,QAAQoH,MAAMA,EAAMC,a,0UEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.a06c563c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport \"./theme.css\"\nimport Overview from './pages/overview'\nexport {Grid, Col, Row } from 'react-styled-flexboxgrid';\n/* \n    - TOAST\n    - support multiple themes\n    - set basic html (background etc)\n    - build in version control\n    - Text\n    - Title\n    - Subtitle\n    - Container\n    - CollapsibleContainer\n    - Button\n*/\n\nexport const OverviewPage = Overview;\n\nlet settings = {\n    \n};\n\nclass Theme {\n    constructor() {\n        this.colors = {\n          primary: \"black\",\n          secondary: \"white\",\n          tertiary: \"red\"\n        };\n\n        this.colors.text = {\n            primary: this.colors.secondary,\n            secondary: this.colors.primary\n        }\n\n        this.defaultWrapWidth = 3;\n\n        this.font = \"American Typewriter\"\n\n        this.sizes = {\n            normal: \"1.2em\",\n            title: \"2em\",\n            subtitle: \"1.4em\"\n        }\n\n        this.medias = {\n          em: {\n            xs: 0,  \n            sm: 48, \n            md: 64, \n            lg: 75\n          }, \n          px: {\n            xs: 0,  \n            sm: 768, \n            md: 1024, \n            lg: 5625\n          }\n        }\n\n        this.medias.query = {\n            onlySmall : `(max-width: ${this.medias.px.sm}px)`,\n            largerthansm : `(min-width: ${this.medias.px.sm+1}px)`,\n            mdandup : `(min-width: ${this.medias.px.md}px)`,\n            smallerthanmd : `(max-width: ${this.medias.px.md-1}px)`\n        }\n\n        this.padding = {\n            xs: 10,  \n            sm: 15, \n            md: 20, \n            lg: 30\n        };\n    }\n    \n    /**\n     * HELPERS\n     */\n    get defaultWrap(){\n        return `solid ${this.colors.primary} ${this.defaultWrapWidth}px`\n    }\n\n    get defaultFont(){\n        return `font-family : ${this.font}; font-size: ${this.sizes.normal};`\n    }\n\n    get styled(){\n        return styled;\n    }\n\n    responsive(pre, values, post){\n        return `\n            ${pre}: ${values.xs}${post};\n\n            @media only screen and (min-width: ${this.medias.px.sm}px) {\n                ${pre}: ${values.sm}${post};\n            }\n\n            @media only screen and (min-width: ${this.medias.px.md}px) {\n                ${pre}: ${values.md}${post};\n            }        \n\n            @media only screen and (min-width: ${this.medias.px.lg}px) {\n                ${pre}: ${values.lg}${post};\n            }        \n        `\n    }\n    \n    /**\n     * COMPONENTS\n     */\n    /**\n     * wrapping\n     */\n    get Wrapped(){\n        return ({children})=><EmptyDiv content={`border : ${this.defaultWrap}; background: white;`}>{children}</EmptyDiv>\n    }\n\n    get Container(){\n        return ({children})=><EmptyDiv content={this.responsive(\"padding\", this.padding, 'px')}>{children}</EmptyDiv>\n    }\n\n    get Text(){\n        return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n    }\n\n    // get Container(){\n    //     return styled.div`\n    //         padding: ${this.padding}\n    //     `\n    // }\n\n    // /**\n    //  * typography\n    //  */\n    // get Text(){\n    //     return styled.p`\n    //         ${this.defaultFont}\n    //     `\n    // }\n\n    get Title(){\n        return styled.div`\n            ${this.defaultFont}\n            font-size: ${this.sizes.title}; \n        `\n    }\n\n    get SubTitle(){\n        return styled(this.Title)`\n            font-size: ${this.sizes.subtitle}; \n        `\n    }\n\n    // /**\n    //  * grid\n    //  */\n    // get Grid(){\n    //     return styled(Grid_)`\n    //         margin: 0px;\n    //         padding: 0px;\n    //         width: 100%;\n    //     `\n    // }\n\n    // get Row(){return Row_};\n    // get Col(){return Col_};\n}\n\nconst Wrapped = styled.div`\n    border: ${props=>props.border}\n`\n\nconst EmptyDiv = styled.div`\n    ${props=>props.content}\n    \n`\n\nconst EmptySpan = styled.span`\n    ${props=>props.content}\n`\n\n\nexport default Theme;","import React from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Theme from '..';\n\nexport default ()=>{\n    const [theme, themes] = useSelector(state => [state.data.theme, state.data.themes]);\n\n\n    if (!theme){\n        return \"loading\"\n    } else {\n        return <theme.Container>\n                    <theme.Wrapped>\n                        <theme.Container>\n                            allo\n                        </theme.Container>\n                    </theme.Wrapped>\n            </theme.Container> \n    }\n}","export const ACTIONS = Object.freeze({\n    SET_CLIENT: Symbol(\"data/client\"),\n    SET_NAV_OPEN: Symbol('data/navopen'),\n    SET_THEME: Symbol('data/theme'),\n    SET_THEMES: Symbol('data/themes'),\n    SET_NEWS: Symbol('data/news')\n});\n\nconst initialState = {\n  client: null,\n  navopen: window.innerWidth > 768,\n  theme: null,\n  themes: null,\n  news: null,\n};\n\nexport default (state = initialState, action) => {\n  \n  switch (action.type) {\n    case ACTIONS.SET_CLIENT: {\n      return {\n        ...state,\n        client: action.client\n      };\n    }\n    case ACTIONS.SET_NEWS: {\n      return {\n        ...state,\n        news: action.news\n      };\n    }\n    case ACTIONS.SET_NAV_OPEN: {\n      return {\n        ...state,\n        navopen: action.navopen\n      };\n    }\n    case ACTIONS.SET_THEME: {\n      return {\n        ...state,\n        theme: action.theme\n      };\n    }\n    case ACTIONS.SET_THEMES: {\n      return {\n        ...state,\n        themes: action.themes\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  } \n};\n","import { combineReducers } from \"redux\";\nimport data from './reducers/DataReducer';\n\nconst rootReducer = combineReducers({\n  data\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./rootreducer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\n\nconst Store = createStore(rootReducer, middleware);\n\nexport default Store;\n","export const envi = ()=>{\n    const dev = (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\");\n    const status = (()=>{return `Running ${dev?'local':'server'}`})()\n    const printstatus = ()=>{\n        console.log(status);\n    }\n\n    if (dev){\n        document.title = \" (local) \" + document.title;\n    }\n    \n    return {\n        dev,\n        status,\n        printstatus\n    }   \n}\n\nexport default envi","import sanityClient from '@sanity/client'\nimport envi from './environment'\nimport {settings} from './connector_settings.json'\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n// import toast from '../services/toast'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst prevFetched = {};\n\nexport const client = (dispatch)=>{\n    const environment = envi();\n    let _ = settings;\n    let news = [];\n    const sc = sanityClient({\n        projectId: _.projectId,\n        dataset: _.dataset,\n        token: _.token, // or leave blank to be anonymous user\n        ignoreBrowserTokenWarning: true,\n        useCdn: false\n    })\n\n    const fetch = (query)=>{\n        return new Promise((resolve, reject)=>{\n            if (prevFetched[query]){\n                if (environment.dev){\n                    console.log(\"reused cached query\");\n                }\n                resolve(prevFetched[query]);\n            } else {\n                sc.fetch(query)\n                .then((data)=>{\n                    prevFetched[query] = data;\n                    resolve(data);\n                }).catch(reject);\n            }\n        })\n    }\n\n    const builder = imageUrlBuilder(sc)\n\n    const squareImage = (url, width)=>{\n        return builder.image(url).width(width).height(width).url();\n    }\n\n    \n    if (environment.dev){\n        environment.printstatus()\n    } \n    // title, description, \n    fetch(\"*[_type == 'biomoddnews']{title, description, images[]{title, description, 'image':image.asset->url}} | order(_createdAt desc)\").then((news)=>{\n        console.log(news)\n        dispatch({ type: DATA_ACTIONS.SET_NEWS, news});\n    })\n\n    \n\n    return {\n        fetch,\n        environment,\n        squareImage\n    }\n}\n\n\n\nexport default client;\n\n","import Theme from '../theme'\n\n\nclass BuilderTheme extends Theme {\n    constructor(){\n      super()\n      this.font = \"OfficeCodePro\"\n      this.sizes.normal = \"1.2em\"\n    }\n  \n    get defaultFont(){\n      return `${super.defaultFont}font-weight: 400;`\n    }\n  \n    get Title(){\n      return this.styled(super.Title)` font-weight: bold;`\n    }\n  }\n  \n  \n\n  export default BuilderTheme;","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\n\n// const Input = ({label, value, setValue})=>{\n//     const theme = useSelector(state => state.data.theme);\n//     const [name, setName] = useState(\"\");\n    \n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         alert(`Submitting Name ${name}`)\n//     }\n\n//     if (!theme){\n//         return null;\n//     } else {\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//             <theme.Text>\n//                 {label}&nbsp;&nbsp;\n//           </theme.Text>\n//           <input\n//             type=\"text\"\n//             value={value}\n//             onChange={e => setValue(e.target.value)}\n//           />\n//         </label>\n//       </form>\n//     );\n//     }\n// }\n\nexport function Input({label, setValue}) {\n    const [name, setName] = useState(\"\");\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setValue(name);\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n            <code>\n                {label}&nbsp;\n          </code>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        &nbsp;\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\nexport default Input;","import React, {useState, useEffect, useRef} from 'react';\nimport { Grid, Col, Row} from '../theme'\nimport { useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport Input from './Input';\nimport Game from './game_simple'\nimport BlockContent from '@sanity/block-content-to-react';\n\n\nconst Home = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const news = useSelector(state => state.data.news);\n    const [author, setAuthor] = useState(\"\");\n    const [device, setDevice] = useState('');\n    const [sensor, setSensor] = useState('');\n    const [gameSettings, setGameSettings] = useState(undefined);\n    const [returnData, setReturnData] = useState(undefined);\n    const newsref = useRef(null);\n    const restref = useRef(null);\n    const socketref = useRef(null);\n    const gameref = useRef(null);\n    let socket;\n\n    useEffect(()=>{\n      if (!gameSettings && socket){\n        socket.emit(\"/gamesettings\");\n      }\n    })\n\n\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n\n    socket.on(\"/gamesettings\", (settings)=>{\n      if (!gameSettings){\n        setGameSettings(settings);  \n      }\n    })\n\n    socket.on(\"/push\", (results)=>{\n\n        console.log(results)\n\n        setReturnData(results.map(r=><>\n            {JSON.stringify(r)} <br/>\n        </>))\n    } )\n\n    const getScroller = (ref)=>{\n      return ()=>{\n        ref.current.scrollIntoView()\n      }\n    }\n\n    if (!theme){\n        return null;\n    } else {\n        \n  \n    return <Grid>\n      <Row align=\"center\">\n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title>\n                    GoTo\n                </theme.Title>\n                <theme.Text>\n                  <ul>\n                    <li onClick={getScroller(newsref)}>\n                      -> news\n                    </li>\n                    <li onClick={getScroller(gameref)}>\n                      -> game\n                    </li>\n                    <li onClick={getScroller(restref)}>\n                      -> store and retrieve data (RESTful)\n                    </li>\n                    <li onClick={getScroller(socketref)}>\n                      -> store and retrieve data (WEBSOCKET)\n                    </li>\n                  </ul>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    GAME\n                </theme.Title>\n                <br/>\n\n                <theme.SubTitle>\n                  Simple version\n                </theme.SubTitle>\n                <theme.Text>\n                  Proof of concept game version with simulated data - will be updated as the development progresses\n                  <br/>\n                  <a href=\"https://docs.google.com/document/d/1EDprQQhg2VJHW0SUoAcNhATV1XVfRxaYFhYVQjl9Rd8/edit\" target=\"_blank\">\n                    --> Game concept master\n                  </a>\n                  <br/><br/>\n                  {/* {gameSettings?<Game socket={socket} resolution={gameSettings.resolution} world={gameSettings.world} /> : \"LOADING\" } */}\n                  \n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n        </Col>\n        \n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    NEWS\n                </theme.Title>\n                <br/>\n\n                {news?\n\n                news.map(({title, description, images})=><>\n                  <theme.SubTitle>\n                    {title}\n                  </theme.SubTitle>\n                  <theme.Text>\n                      <BlockContent blocks={description} />\n                  </theme.Text>\n                  {(images && images.length)?\n                  images.map(({title, description, image})=><>\n                      <theme.Text>\n                        <b>\n                        {title}\n                        </b>\n                      </theme.Text>\n                      <img src={image} alt={title} style={{width: \"100%\"}} />\n                      <theme.Text>\n                        <i>\n                        <BlockContent blocks={description} />\n                        </i>\n                      </theme.Text>\n                  </>)\n                  : null}\n                  <br/>\n                </>)\n                \n                : <theme.Text>L O A D I N G</theme.Text>}\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        \n\n      </Row>\n      <Row align=\"center\">\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={restref}>\n                    Store and retrieve data (RESTFul API)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                    /push?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device, sensor, value\n                  <br/>\n                  Example: \n                  <br/>\n                  <i>/push?author=Pieter&device=T&sensor=ts&value=22</i>\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                      /data?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device and/or sensor\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                    <a href=\"http://www.biomodd.xyz/data?author=Pieter\" target=\"_blank\">\n                      /data?author=Pieter\n                    </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                  <a href=\"http://www.biomodd.xyz/data?device=Test&author=Pieter\" target=\"_blank\">\n                    /data?device=Test&author=Pieter\n                      </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter and device \"Test\"\n                  <br/>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={socketref}>\n                    Store and retrieve data (WEBSOCKET)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/push\" with an object (js) with the fields:  author, device, sensor, value\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/data\" with an object (js) with the fields:  author, device and/or sensor,\n                    you will get back a list (js) which contains the selection (AND logic).\n                </theme.Text>\n                <br/><br/>\n                <theme.Wrapped>\n                    <theme.Container>\n                        <Input label=\"author\" value={author} setValue={setAuthor} />\n                        <Input label=\"device\" value={device} setValue={setDevice} />\n                        <Input label=\"sensor\" value={sensor} setValue={setSensor}/>\n                    </theme.Container>\n                </theme.Wrapped>\n                <br/>\n                \n                <theme.Text style={{width: \"auto\"}}>\n                    Search for entries <br/> \n                    author: {author?author:\"any\"}, <br/>\n                    device: {device?device:\"any\"}, <br/>\n                    sensor: {sensor?sensor:\"any\"}\n                </theme.Text>\n                <br/><br/>\n                &nbsp;&nbsp;<button style={{\n                    fontSize: \"2em\",\n                    background: \"blue\",\n                    color: \"white\",\n                    paddingLeft: \"10px\"\n                }} onClick={()=>{\n                    const rv = {};\n                    if (author && author!==''){\n                        rv.author = author;\n                    }\n                    if (device && device!==''){\n                        rv.device = device;\n                    }\n                    if (sensor && sensor!==''){\n                        rv.sensor = sensor;\n                    }\n                    socket.emit(\"/data\", rv)\n                }}> GO\n                    \n                    </button>\n\n                    <br/><br/><br/>\n\n                    <theme.Text>\n                    {returnData? returnData:null}\n                    </theme.Text>\n                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n      </Row>\n    </Grid>\n    }\n\n    \n  }\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Theme, {OverviewPage} from './theme'\nimport { Provider } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport { createBrowserHistory } from 'history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS as DATA_ACTIONS } from \"./reducers/DataReducer\"\nimport sanityclient from './client';\n\n// import Connectors from './components/connectors';\nimport Logo from './assets/logo.svg'\n\nimport './assets/fonts/'\nimport BuilderTheme from './services/Buildertheme'\nimport Home from './components/Home'\n\nconst DataHelper = () => {\n  const data = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.client && dispatch){\n      const cli = sanityclient(dispatch);\n      dispatch({ type: DATA_ACTIONS.SET_CLIENT, client: cli});\n    } \n\n    if (!data.theme && dispatch ){\n      const builder = new BuilderTheme();\n      dispatch({type: DATA_ACTIONS.SET_THEME, theme: new BuilderTheme()})\n      // dispatch({type: DATA_ACTIONS.SET_THEMES, themes: [new BuilderTheme()]})\n    }\n\n  })\n  return (\n    null\n  )\n}\n\n\nconst App =()=>{\n  const history = createBrowserHistory()\n  const theme = new BuilderTheme();\n\n  return (\n    <Provider store={Store}>\n    <DataHelper />\n      <Router history={history}>\n        <span>\n          <div style={{padding: \"10px\"}}>\n        <img src={Logo} style={{float: \"left\", width: \"100px\"}}/>\n        \n          <theme.Title style={{color: \"white\", fontSize: \"4em\"}}>\n              &nbsp;BIOMODD [BRG<sup>13</sup>]\n          </theme.Title>\n        \n        </div>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exacact path=\"/overview\" component={OverviewPage} />\n              <Route component={Home}/>\n            </Switch>\n        </span>\n      </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// import './assets/fonts/OCP'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ef8c6e8.svg\";"],"sourceRoot":""}