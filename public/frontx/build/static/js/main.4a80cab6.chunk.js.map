{"version":3,"sources":["theme/index.js","theme/pages/overview.jsx","reducers/DataReducer.js","rootreducer.js","Store.js","client/environment.js","client/index.jsx","services/Buildertheme.js","components/Input.js","components/spectrum/aux.js","components/spectrum/interactiveObject.js","components/spectrum/plant.js","components/spectrum/light.js","components/spectrum/index.js","components/Home.js","App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["OverviewPage","useSelector","state","data","theme","themes","Container","Wrapped","Theme","this","colors","primary","secondary","tertiary","text","defaultWrapWidth","font","sizes","normal","title","subtitle","medias","em","xs","sm","md","lg","px","query","onlySmall","largerthansm","mdandup","smallerthanmd","padding","pre","values","post","styled","children","EmptyDiv","content","defaultWrap","responsive","EmptySpan","defaultFont","div","Title","props","border","span","ACTIONS","Object","freeze","SET_CLIENT","Symbol","SET_NAV_OPEN","SET_THEME","SET_THEMES","SET_NEWS","initialState","client","navopen","window","innerWidth","news","rootReducer","combineReducers","action","type","middleware","applyMiddleware","thunkMiddleware","Store","createStore","envi","dev","location","hostname","status","document","printstatus","console","log","prevFetched","dispatch","environment","_","settings","sc","sanityClient","projectId","dataset","token","ignoreBrowserTokenWarning","useCdn","fetch","Promise","resolve","reject","then","catch","builder","imageUrlBuilder","DATA_ACTIONS","squareImage","url","width","image","height","BuilderTheme","Input","label","setValue","useState","name","setName","onSubmit","evt","preventDefault","value","onChange","e","target","getPointOnCircle","p5","centrum","offset","division","section","angle","Math","PI","pos","createVector","cos","sin","mult","add","IO_STATE","UNSELECTED","CLICKED","HOVERING","DRAGGED","InteractiveObject","size","loc","dist","isOver","mouseX","mouseY","isCurrentOver","mouseMoved","Plant","color","alternativeColor","noStroke","fill","x","y","millis","circle","Handle","Beam","origin","direction","noFill","stroke","p2","set","line","Light","controlOffset","strokeWeight","handle","beam","getDirection","r","random","handleOffset","moveHandle","draw","sub","normalize","mouseV","diff","setDirection","mousePressed","mouseReleased","mouseDragged","socket","lights","Map","plants","toDraw","toInteract","lightSettings","plantSettings","amount","getCenter","getRandomPoint","setup","canvasParentRef","createCanvas","parent","forEach","i","push","get","on","gameWorld","background","td","ti","Home","author","setAuthor","device","setDevice","sensor","setSensor","undefined","gameSettings","setGameSettings","returnData","setReturnData","newsref","useRef","restref","socketref","gameref","useEffect","emit","io","transports","results","map","JSON","stringify","getScroller","ref","current","scrollIntoView","align","Text","onClick","SubTitle","href","description","images","blocks","length","src","alt","style","fontSize","paddingLeft","rv","DataHelper","useDispatch","cli","sanityclient","App","history","createBrowserHistory","store","Logo","float","exact","path","component","exacact","Boolean","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4a80cab6.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport \"./theme.css\"\nimport Overview from './pages/overview'\nexport {Grid, Col, Row } from 'react-styled-flexboxgrid';\n/* \n    - TOAST\n    - support multiple themes\n    - set basic html (background etc)\n    - build in version control\n    - Text\n    - Title\n    - Subtitle\n    - Container\n    - CollapsibleContainer\n    - Button\n*/\n\nexport const OverviewPage = Overview;\n\nlet settings = {\n    \n};\n\nclass Theme {\n    constructor() {\n        this.colors = {\n          primary: \"black\",\n          secondary: \"white\",\n          tertiary: \"red\"\n        };\n\n        this.colors.text = {\n            primary: this.colors.secondary,\n            secondary: this.colors.primary\n        }\n\n        this.defaultWrapWidth = 3;\n\n        this.font = \"American Typewriter\"\n\n        this.sizes = {\n            normal: \"1.2em\",\n            title: \"2em\",\n            subtitle: \"1.4em\"\n        }\n\n        this.medias = {\n          em: {\n            xs: 0,  \n            sm: 48, \n            md: 64, \n            lg: 75\n          }, \n          px: {\n            xs: 0,  \n            sm: 768, \n            md: 1024, \n            lg: 5625\n          }\n        }\n\n        this.medias.query = {\n            onlySmall : `(max-width: ${this.medias.px.sm}px)`,\n            largerthansm : `(min-width: ${this.medias.px.sm+1}px)`,\n            mdandup : `(min-width: ${this.medias.px.md}px)`,\n            smallerthanmd : `(max-width: ${this.medias.px.md-1}px)`\n        }\n\n        this.padding = {\n            xs: 10,  \n            sm: 15, \n            md: 20, \n            lg: 30\n        };\n    }\n    \n    /**\n     * HELPERS\n     */\n    get defaultWrap(){\n        return `solid ${this.colors.primary} ${this.defaultWrapWidth}px`\n    }\n\n    get defaultFont(){\n        return `font-family : ${this.font}; font-size: ${this.sizes.normal};`\n    }\n\n    get styled(){\n        return styled;\n    }\n\n    responsive(pre, values, post){\n        return `\n            ${pre}: ${values.xs}${post};\n\n            @media only screen and (min-width: ${this.medias.px.sm}px) {\n                ${pre}: ${values.sm}${post};\n            }\n\n            @media only screen and (min-width: ${this.medias.px.md}px) {\n                ${pre}: ${values.md}${post};\n            }        \n\n            @media only screen and (min-width: ${this.medias.px.lg}px) {\n                ${pre}: ${values.lg}${post};\n            }        \n        `\n    }\n    \n    /**\n     * COMPONENTS\n     */\n    /**\n     * wrapping\n     */\n    get Wrapped(){\n        return ({children})=><EmptyDiv content={`border : ${this.defaultWrap}; background: white;`}>{children}</EmptyDiv>\n    }\n\n    get Container(){\n        return ({children})=><EmptyDiv content={this.responsive(\"padding\", this.padding, 'px')}>{children}</EmptyDiv>\n    }\n\n    get Text(){\n        return ({children})=><EmptySpan content={this.defaultFont}>{children}</EmptySpan>\n    }\n\n    // get Container(){\n    //     return styled.div`\n    //         padding: ${this.padding}\n    //     `\n    // }\n\n    // /**\n    //  * typography\n    //  */\n    // get Text(){\n    //     return styled.p`\n    //         ${this.defaultFont}\n    //     `\n    // }\n\n    get Title(){\n        return styled.div`\n            ${this.defaultFont}\n            font-size: ${this.sizes.title}; \n        `\n    }\n\n    get SubTitle(){\n        return styled(this.Title)`\n            font-size: ${this.sizes.subtitle}; \n        `\n    }\n\n    // /**\n    //  * grid\n    //  */\n    // get Grid(){\n    //     return styled(Grid_)`\n    //         margin: 0px;\n    //         padding: 0px;\n    //         width: 100%;\n    //     `\n    // }\n\n    // get Row(){return Row_};\n    // get Col(){return Col_};\n}\n\nconst Wrapped = styled.div`\n    border: ${props=>props.border}\n`\n\nconst EmptyDiv = styled.div`\n    ${props=>props.content}\n    \n`\n\nconst EmptySpan = styled.span`\n    ${props=>props.content}\n`\n\n\nexport default Theme;","import React from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Theme from '..';\n\nexport default ()=>{\n    const [theme, themes] = useSelector(state => [state.data.theme, state.data.themes]);\n\n\n    if (!theme){\n        return \"loading\"\n    } else {\n        return <theme.Container>\n                    <theme.Wrapped>\n                        <theme.Container>\n                            allo\n                        </theme.Container>\n                    </theme.Wrapped>\n            </theme.Container> \n    }\n}","export const ACTIONS = Object.freeze({\n    SET_CLIENT: Symbol(\"data/client\"),\n    SET_NAV_OPEN: Symbol('data/navopen'),\n    SET_THEME: Symbol('data/theme'),\n    SET_THEMES: Symbol('data/themes'),\n    SET_NEWS: Symbol('data/news')\n});\n\nconst initialState = {\n  client: null,\n  navopen: window.innerWidth > 768,\n  theme: null,\n  themes: null,\n  news: null,\n};\n\nexport default (state = initialState, action) => {\n  \n  switch (action.type) {\n    case ACTIONS.SET_CLIENT: {\n      return {\n        ...state,\n        client: action.client\n      };\n    }\n    case ACTIONS.SET_NEWS: {\n      return {\n        ...state,\n        news: action.news\n      };\n    }\n    case ACTIONS.SET_NAV_OPEN: {\n      return {\n        ...state,\n        navopen: action.navopen\n      };\n    }\n    case ACTIONS.SET_THEME: {\n      return {\n        ...state,\n        theme: action.theme\n      };\n    }\n    case ACTIONS.SET_THEMES: {\n      return {\n        ...state,\n        themes: action.themes\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  } \n};\n","import { combineReducers } from \"redux\";\nimport data from './reducers/DataReducer';\n\nconst rootReducer = combineReducers({\n  data\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./rootreducer\";\n\nconst middleware = applyMiddleware(thunkMiddleware);\n\nconst Store = createStore(rootReducer, middleware);\n\nexport default Store;\n","export const envi = ()=>{\n    const dev = (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\");\n    const status = (()=>{return `Running ${dev?'local':'server'}`})()\n    const printstatus = ()=>{\n        console.log(status);\n    }\n\n    if (dev){\n        document.title = \" (local) \" + document.title;\n    }\n    \n    return {\n        dev,\n        status,\n        printstatus\n    }   \n}\n\nexport default envi","import sanityClient from '@sanity/client'\nimport envi from './environment'\nimport {settings} from './connector_settings.json'\nimport { ACTIONS as DATA_ACTIONS } from \"../reducers/DataReducer\"\n// import toast from '../services/toast'\nimport imageUrlBuilder from '@sanity/image-url'\n\nconst prevFetched = {};\n\nexport const client = (dispatch)=>{\n    const environment = envi();\n    let _ = settings;\n    let news = [];\n    const sc = sanityClient({\n        projectId: _.projectId,\n        dataset: _.dataset,\n        token: _.token, // or leave blank to be anonymous user\n        ignoreBrowserTokenWarning: true,\n        useCdn: false\n    })\n\n    const fetch = (query)=>{\n        return new Promise((resolve, reject)=>{\n            if (prevFetched[query]){\n                if (environment.dev){\n                    console.log(\"reused cached query\");\n                }\n                resolve(prevFetched[query]);\n            } else {\n                sc.fetch(query)\n                .then((data)=>{\n                    prevFetched[query] = data;\n                    resolve(data);\n                }).catch(reject);\n            }\n        })\n    }\n\n    const builder = imageUrlBuilder(sc)\n\n    const squareImage = (url, width)=>{\n        return builder.image(url).width(width).height(width).url();\n    }\n\n    \n    if (environment.dev){\n        environment.printstatus()\n    } \n    // title, description, \n    fetch(\"*[_type == 'biomoddnews']{title, description, images[]{title, description, 'image':image.asset->url}} | order(_createdAt desc)\").then((news)=>{\n        console.log(news)\n        dispatch({ type: DATA_ACTIONS.SET_NEWS, news});\n    })\n\n    \n\n    return {\n        fetch,\n        environment,\n        squareImage\n    }\n}\n\n\n\nexport default client;\n\n","import Theme from '../theme'\n\n\nclass BuilderTheme extends Theme {\n    constructor(){\n      super()\n      this.font = \"OfficeCodePro\"\n      this.sizes.normal = \"1.2em\"\n    }\n  \n    get defaultFont(){\n      return `${super.defaultFont}font-weight: 400;`\n    }\n  \n    get Title(){\n      return this.styled(super.Title)` font-weight: bold;`\n    }\n  }\n  \n  \n\n  export default BuilderTheme;","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\n\n// const Input = ({label, value, setValue})=>{\n//     const theme = useSelector(state => state.data.theme);\n//     const [name, setName] = useState(\"\");\n    \n//     const handleSubmit = (evt) => {\n//         evt.preventDefault();\n//         alert(`Submitting Name ${name}`)\n//     }\n\n//     if (!theme){\n//         return null;\n//     } else {\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//             <theme.Text>\n//                 {label}&nbsp;&nbsp;\n//           </theme.Text>\n//           <input\n//             type=\"text\"\n//             value={value}\n//             onChange={e => setValue(e.target.value)}\n//           />\n//         </label>\n//       </form>\n//     );\n//     }\n// }\n\nexport function Input({label, setValue}) {\n    const [name, setName] = useState(\"\");\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setValue(name);\n    }\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n            <code>\n                {label}&nbsp;\n          </code>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </label>\n        &nbsp;\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\nexport default Input;","// ===============================\n//      A U X\n// ===============================\nexport const getPointOnCircle = (p5, centrum, offset, division, section)=>{\n    let angle = ((2 * Math.PI) / division) * section;\n    let pos = p5.createVector(Math.cos(angle), Math.sin(angle));\n    pos.mult(offset);\n    pos.add(centrum);\n    return pos;\n}\n\nexport const mouseV = (p5)=>p5.createVector(p5.mouseX, p5.mouseY);","// ========================================\n//      I N T E R A C T I V E  O B J E C T\n// ========================================\n// an interactive object, that knows when clicked or dragged\n// currently assumes it is round\n\nexport const IO_STATE = Object.freeze({\n    UNSELECTED: \"unselected\",\n    CLICKED: \"clicked\",\n    HOVERING: \"hovering\",\n    DRAGGED: \"dragged\"\n})\n\nexport class InteractiveObject {\n    \n    constructor(location, size){\n        this.location = location;\n        this.size = size;\n        this.state = IO_STATE.UNSELECTED;\n    }\n\n    isOver(loc){\n        return loc.dist(this.location) < this.size/2;\n    }\n\n    isCurrentOver(p5){\n        return this.isOver(p5.createVector(p5.mouseX, p5.mouseY));\n    }\n\n    mousePressed(p5){\n        if (this.isCurrentOver(p5)){\n            this.state = IO_STATE.CLICKED;\n        }\n    }\n\n    mouseReleased(p5){\n        this.state = IO_STATE.UNSELECTED;\n        this.mouseMoved(p5);\n    }\n\n    mouseDragged(p5){\n        if (this.state !== IO_STATE.UNSELECTED){\n            this.state = IO_STATE.DRAGGED;\n        }   \n    }\n\n    mouseMoved(p5){\n        if (this.state === IO_STATE.UNSELECTED && this.isCurrentOver(p5)){\n            this.state = IO_STATE.HOVERING;\n        } else if (this.state === IO_STATE.HOVERING && !this.isCurrentOver(p5)){\n            this.state = IO_STATE.UNSELECTED;\n        }\n    }\n}","import {IO_STATE, InteractiveObject} from './interactiveObject.js'\n\n// ===============================\n//      P L A N T\n// ===============================\n// Them plants\n\nclass Plant extends InteractiveObject {\n    constructor({location, size, color, alternativeColor}){\n        super(location, size);\n        this.color = color;\n        this.alternativeColor = alternativeColor;\n    }\n\n    draw(p5){\n        p5.noStroke();\n        if (this.state === IO_STATE.UNSELECTED || this.state === IO_STATE.HOVERING){\n            p5.fill(this.color);\n        } else {\n            if (this.state === IO_STATE.DRAGGED ){\n                this.location.x = p5.mouseX;\n                this.location.y = p5.mouseY;\n            }\n            p5.fill(this.alternativeColor);\n        }\n\n        let size = this.size;\n        if (this.state === IO_STATE.HOVERING){\n            size+=Math.sin(p5.millis())*2;\n        }\n        \n        p5.circle(this.location.x, this.location.y, size);\n    }\n}\n\nexport default Plant;","import {IO_STATE, InteractiveObject} from './interactiveObject'\nimport {mouseV} from './aux'\n// ===============================\n//      L I G H T\n// ===============================\n// The object that emits a beam of light\n\n// the handle that allows for the rotation of the light\nclass Handle extends InteractiveObject {\n    constructor (location, size, color){\n        super(location, size);\n        this.color = color;\n    }\n\n    draw(p5){\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.location.x, this.location.y, this.state===IO_STATE.UNSELECTED?this.size:this.size*1.2);\n    }\n}\n\nclass Beam {\n    constructor(origin, direction, color){\n        this.origin = origin;\n        this.direction = direction;\n        this.color = color;\n    }\n\n    setDirection(direction){\n        this.direction = direction;\n    }\n\n    draw(p5){\n        p5.noFill();\n        p5.stroke(this.color);\n        const p2 = p5.createVector(0, 0).set(this.direction);\n        p2.mult(p5.width);\n        p2.add(this.origin);\n        p5.line(this.origin.x, this.origin.y, p2.x, p2.y);\n    }\n}\n\nclass Light extends InteractiveObject {\n    constructor({color, size, location, controlOffset, strokeWeight}, p5){\n        super(location, size);\n        this.color = color;\n        this.controlOffset = controlOffset;\n        this.strokeWeight = strokeWeight;\n\n        this.handle = new Handle(p5.createVector(0, 0), 10, this.color);\n        this.beam = new Beam(this.location, this.getDirection(p5), color);\n        const r = ()=>p5.random(-this.handleOffset(), this.handleOffset());\n        this.moveHandle(p5, p5.createVector().set(this.location).add(p5.createVector(r(), r())))\n        \n    }\n\n    draw(p5){\n        if (this.handle.state === IO_STATE.DRAGGED){\n            this.moveHandle(p5);\n        }\n\n        // draw light\n        p5.noStroke();\n        p5.fill(this.color);\n        p5.circle(this.location.x, this.location.y, this.size);\n        p5.noFill();\n        p5.strokeWeight(this.strokeWeight);\n        p5.stroke(this.color);\n        p5.circle(this.location.x, this.location.y, this.size + this.controlOffset);\n\n        // draw handle\n        this.handle.draw(p5);\n\n        // draw beam\n        this.beam.draw(p5);\n    }\n\n    handleOffset(){\n        return (this.controlOffset+this.size)/2;\n    }\n\n    getDirection(p5){\n        const direction = p5.createVector(0,0).set(this.location);\n        direction.sub(this.handle.location);\n        direction.normalize();\n        return direction;\n    }\n\n    moveHandle(p5, loc){\n\n        if (!loc){\n            loc = mouseV(p5);\n        } \n\n        // we move the handle in such a way that it resembles\n        // the location of the mouse while dragging;\n        const diff = p5.createVector(0,0).set(this.location).sub(loc);\n        \n        // limit to handleoffset\n        diff.normalize();\n        diff.mult(-this.handleOffset());\n\n        // add to center\n        diff.add(this.location);\n        this.handle.location.set(diff);\n        this.beam.setDirection(this.getDirection(p5));\n    }\n\n    // ---- I/O stuff \n    // passing interactions down to the handle member\n    mousePressed(p5){\n        super.mousePressed(p5);\n        this.handle.mousePressed(p5);\n    }\n\n    mouseReleased(p5){\n        super.mouseReleased(p5);\n        this.handle.mouseReleased(p5);\n    }\n\n    mouseDragged(p5){\n        super.mouseDragged(p5);\n        this.handle.mouseDragged(p5);\n    }\n\n    mouseMoved(p5){\n        super.mouseMoved(p5);\n        this.handle.mouseMoved(p5);\n    }    \n}\n\nexport default Light;","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport {getPointOnCircle} from './aux'\nimport Plant from './plant'\nimport Light from './light'\n\n// ===============================\n// ===============================\n//      G A M E\n// ===============================\n// ===============================\nexport default ({socket}) => {\n\n    // enumerations\n\n    // globals\n    const lights        = new Map();\n    const plants        = [];\n\n    // -- keep track of all objects we want to draw \n    // --- expects they implemented a draw(p5) method\n    const toDraw        = [];\n\n    // -- keep track of all objects we want to interact with \n    // --- expects they implemented all interactive methods as defined in the InteractiveObject class\n    const toInteract    = [];\n\n    const settings = {\n        background: \"yellow\"\n    }\n\n    const lightSettings = {\n        size: 30, \n        controlOffset: 20,\n        offset: .4,\n        strokeWeight: 2\n    };\n\n    const plantSettings = {\n        amount: 2,\n        size: 40,\n        color: \"darkgreen\",\n        alternativeColor: \"lightgreen\"\n    }\n    \n    // ===============================\n    //      A U X\n    // ===============================\n    const getCenter = (p5)=>{\n        return p5.createVector(p5.width*.5, p5.height*.5);\n    }\n\n    const getRandomPoint = (p5)=> p5.createVector(Math.random()*p5.width, Math.random()*p5.height);\n    \n    // ===============================\n    //      S E T U P\n    // =============================== \n\tconst setup = (p5, canvasParentRef) => {\n        // setup canvas\n        if (canvasParentRef){\n            p5.createCanvas(500, 500).parent(canvasParentRef);\n        }\n\n        // setup lights\n        [\"red\", \"green\", \"blue\"].forEach((color, i)=>{\n            lights.set(color, new Light(\n                {\n                    color, \n                    location: getPointOnCircle(p5, getCenter(p5), p5.width*lightSettings.offset, 3, i),\n                    ...lightSettings\n            }, p5));\n            toDraw.push(lights.get(color));\n            toInteract.push(lights.get(color));\n        })\n\n        for (let i = 0; i < plantSettings.amount; i++){\n            plants[i] = new Plant({location: getRandomPoint(p5), ...plantSettings});\n            toDraw.push(plants[i]);\n            toInteract.push(plants[i]);\n        }\n\n        // setup sockets\n        socket.on(\"/gameUpdateWorld\", (gameWorld)=>{\n            // world = gameWorld;\n        })\n\t};\n\n\n    // ===============================\n    //      D R A W\n    // =============================== \n\tconst draw = (p5) => {\n\t\tp5.background(settings.background);\n        toDraw.forEach(td=>td.draw(p5));\n\t};\n\n    // ===============================\n    //      I / O\n    // =============================== \n\tconst mousePressed = (p5)=>{\n        toInteract.forEach(ti=>ti.mousePressed(p5));\n\t}\n\n    const mouseReleased = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseReleased(p5));\n    }\n\n    const mouseDragged = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseDragged(p5));\n    }\n\n    const mouseMoved = (p5)=>{\n        toInteract.forEach(ti=>ti.mouseMoved(p5));\n    }\n\n\treturn <Sketch  setup={setup} \n                    draw={draw} \n                    mousePressed={mousePressed} \n                    mouseReleased={mouseReleased} \n                    mouseDragged={mouseDragged}\n                    mouseMoved={mouseMoved}\n                    \n                    />;\n};\n","import React, {useState, useEffect, useRef} from 'react';\nimport { Grid, Col, Row} from '../theme'\nimport { useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport Input from './Input';\nimport Game from '../components/spectrum'\nimport BlockContent from '@sanity/block-content-to-react';\n\nconst Home = ()=>{\n    const theme = useSelector(state => state.data.theme);\n    const news = useSelector(state => state.data.news);\n    const [author, setAuthor] = useState(\"\");\n    const [device, setDevice] = useState('');\n    const [sensor, setSensor] = useState('');\n    const [gameSettings, setGameSettings] = useState(undefined);\n    const [returnData, setReturnData] = useState(undefined);\n    const newsref = useRef(null);\n    const restref = useRef(null);\n    const socketref = useRef(null);\n    const gameref = useRef(null);\n    let socket;\n\n    useEffect(()=>{\n      if (!gameSettings && socket){\n        socket.emit(\"/gamesettings\");\n      }\n    })\n\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\"){\n        socket = io(\"http://localhost:2200/\", { transports: [\"websocket\"] });\n    } else {\n        socket= io();\n    }\n\n    socket.on(\"/gamesettings\", (settings)=>{\n      if (!gameSettings){\n        setGameSettings(settings);  \n      }\n    })\n\n    socket.on(\"/push\", (results)=>{\n\n        console.log(results)\n\n        setReturnData(results.map(r=><>\n            {JSON.stringify(r)} <br/>\n        </>))\n    } )\n\n    const getScroller = (ref)=>{\n      return ()=>{\n        ref.current.scrollIntoView()\n      }\n    }\n\n    if (!theme){\n        return null;\n    } else {\n        \n  \n    return <Grid>\n      <Row align=\"center\">\n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title>\n                    GoTo\n                </theme.Title>\n                <theme.Text>\n                  <ul>\n                    <li onClick={getScroller(newsref)}>\n                      -> news\n                    </li>\n                    <li onClick={getScroller(gameref)}>\n                      -> game\n                    </li>\n                    <li onClick={getScroller(restref)}>\n                      -> store and retrieve data (RESTful)\n                    </li>\n                    <li onClick={getScroller(socketref)}>\n                      -> store and retrieve data (WEBSOCKET)\n                    </li>\n                  </ul>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    GAME\n                </theme.Title>\n                <br/>\n\n                <theme.SubTitle>\n                  Simple version\n                </theme.SubTitle>\n                <theme.Text>\n                  Proof of concept game version with simulated data - will be updated as the development progresses\n                  <br/>\n                  <a href=\"https://docs.google.com/document/d/1EDprQQhg2VJHW0SUoAcNhATV1XVfRxaYFhYVQjl9Rd8/edit\" target=\"_blank\">\n                    --> Game concept master\n                  </a>\n                  <br/><br/>\n                  {gameSettings?<Game socket={socket} /> : \"LOADING\" }\n                  \n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n\n        </Col>\n        \n      <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={newsref}>\n                    NEWS\n                </theme.Title>\n                <br/>\n\n                {news?\n\n                news.map(({title, description, images})=><>\n                  <theme.SubTitle>\n                    {title}\n                  </theme.SubTitle>\n                  <theme.Text>\n                      <BlockContent blocks={description} />\n                  </theme.Text>\n                  {(images && images.length)?\n                  images.map(({title, description, image})=><>\n                      <theme.Text>\n                        <b>\n                        {title}\n                        </b>\n                      </theme.Text>\n                      <img src={image} alt={title} style={{width: \"100%\"}} />\n                      <theme.Text>\n                        <i>\n                        <BlockContent blocks={description} />\n                        </i>\n                      </theme.Text>\n                  </>)\n                  : null}\n                  <br/>\n                </>)\n                \n                : <theme.Text>L O A D I N G</theme.Text>}\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n\n        \n\n      </Row>\n      <Row align=\"center\">\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={restref}>\n                    Store and retrieve data (RESTFul API)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                    /push?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device, sensor, value\n                  <br/>\n                  Example: \n                  <br/>\n                  <i>/push?author=Pieter&device=T&sensor=ts&value=22</i>\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                  <code style={{fontSize: \"1.4em\"}}>\n                      /data?var1=value1&var2=val2\n                  </code>\n                  <br/>\n                  <b>required fields</b> :  author, device and/or sensor\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                    <a href=\"http://www.biomodd.xyz/data?author=Pieter\" target=\"_blank\">\n                      /data?author=Pieter\n                    </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter\n                  <br/><br/>\n                  Example: \n                  <br/>\n                  <i>\n                  <a href=\"http://www.biomodd.xyz/data?device=Test&author=Pieter\" target=\"_blank\">\n                    /data?device=Test&author=Pieter\n                      </a>\n                    </i>\n                  <br/>\n                  This will select only the data entries that have been added by the author Pieter and device \"Test\"\n                  <br/>\n                </theme.Text>\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n        <Col xs={12} sm={8} md={6}>\n          <theme.Container>\n            <br/><br/>\n            <theme.Wrapped>\n              <theme.Container>\n                <theme.Title ref={socketref}>\n                    Store and retrieve data (WEBSOCKET)\n                </theme.Title>\n                <br/>\n                <theme.SubTitle>\n                  Store data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/push\" with an object (js) with the fields:  author, device, sensor, value\n                </theme.Text>\n                <br/><br/>\n                <theme.SubTitle>\n                  Retrieve data\n                </theme.SubTitle>\n                <theme.Text>\n                    Connect to the socket on this server, and send a message \"/data\" with an object (js) with the fields:  author, device and/or sensor,\n                    you will get back a list (js) which contains the selection (AND logic).\n                </theme.Text>\n                <br/><br/>\n                <theme.Wrapped>\n                    <theme.Container>\n                        <Input label=\"author\" value={author} setValue={setAuthor} />\n                        <Input label=\"device\" value={device} setValue={setDevice} />\n                        <Input label=\"sensor\" value={sensor} setValue={setSensor}/>\n                    </theme.Container>\n                </theme.Wrapped>\n                <br/>\n                \n                <theme.Text style={{width: \"auto\"}}>\n                    Search for entries <br/> \n                    author: {author?author:\"any\"}, <br/>\n                    device: {device?device:\"any\"}, <br/>\n                    sensor: {sensor?sensor:\"any\"}\n                </theme.Text>\n                <br/><br/>\n                &nbsp;&nbsp;<button style={{\n                    fontSize: \"2em\",\n                    background: \"blue\",\n                    color: \"white\",\n                    paddingLeft: \"10px\"\n                }} onClick={()=>{\n                    const rv = {};\n                    if (author && author!==''){\n                        rv.author = author;\n                    }\n                    if (device && device!==''){\n                        rv.device = device;\n                    }\n                    if (sensor && sensor!==''){\n                        rv.sensor = sensor;\n                    }\n                    socket.emit(\"/data\", rv)\n                }}> GO\n                    \n                    </button>\n\n                    <br/><br/><br/>\n\n                    <theme.Text>\n                    {returnData? returnData:null}\n                    </theme.Text>\n                \n\n              </theme.Container>\n            </theme.Wrapped>\n          </theme.Container>\n        </Col>\n      </Row>\n    </Grid>\n    }\n\n    \n  }\n\nexport default Home;","import React, {useEffect} from 'react';\nimport Theme, {OverviewPage} from './theme'\nimport { Provider } from \"react-redux\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport { createBrowserHistory } from 'history';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS as DATA_ACTIONS } from \"./reducers/DataReducer\"\nimport sanityclient from './client';\n\n// import Connectors from './components/connectors';\nimport Logo from './assets/logo.svg'\n\nimport './assets/fonts/'\nimport BuilderTheme from './services/Buildertheme'\nimport Home from './components/Home'\n\nconst DataHelper = () => {\n  const data = useSelector(state => state.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.client && dispatch){\n      const cli = sanityclient(dispatch);\n      dispatch({ type: DATA_ACTIONS.SET_CLIENT, client: cli});\n    } \n\n    if (!data.theme && dispatch ){\n      const builder = new BuilderTheme();\n      dispatch({type: DATA_ACTIONS.SET_THEME, theme: new BuilderTheme()})\n      // dispatch({type: DATA_ACTIONS.SET_THEMES, themes: [new BuilderTheme()]})\n    }\n\n  })\n  return (\n    null\n  )\n}\n\n\nconst App =()=>{\n  const history = createBrowserHistory()\n  const theme = new BuilderTheme();\n\n  return (\n    <Provider store={Store}>\n    <DataHelper />\n      <Router history={history}>\n        <span>\n          <div style={{padding: \"10px\"}}>\n        <img src={Logo} style={{float: \"left\", width: \"100px\"}}/>\n        \n          <theme.Title style={{color: \"white\", fontSize: \"4em\"}}>\n              &nbsp;BIOMODD [BRG<sup>13</sup>]\n          </theme.Title>\n        \n        </div>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exacact path=\"/overview\" component={OverviewPage} />\n              <Route component={Home}/>\n            </Switch>\n        </span>\n      </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// import './assets/fonts/OCP'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4ef8c6e8.svg\";"],"sourceRoot":""}